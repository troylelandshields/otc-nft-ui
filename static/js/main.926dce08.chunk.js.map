{"version":3,"sources":["services/config.js","components/nav/NavBar.js","components/pages/Home.js","components/ui/nftmeta.js","components/ui/checkout.js","components/pages/Counterfeit.js","components/pages/Custom.js","components/pages/TakeOwnership.js","components/pages/FAQ.js","App.js","index.js"],"names":["config","apiHost","env","ethAPIProvider","etherscanAPIKey","contractAddr","nftAddr","keyToken","abi","NavBar","useState","readProvider","setReadProvider","currBasePrice","setCurrBasePrice","currOwnerBal","setCurrOwnerBal","sub","contractURL","useEffect","provider","ethers","providers","EtherscanProvider","a","contract","Contract","basePriceUSD","basePrice","toNumber","balances","ownerBal","utils","formatEther","toString","console","log","f","style","backgroundImage","boxShadow","marginBottom","color","position","opacity","Container","Row","paddingTop","Col","className","fontFamily","bottom","md","span","offset","fontSize","Navbar","sticky","expand","marginBotom","Toggle","aria-controls","Collapse","id","Nav","defaultActiveKey","Link","as","eventKey","to","href","target","rel","Home","props","Jumbotron","height","Figure","Image","src","Caption","marginTop","NFTMeta","displayElement","handleChange","animationURL","imageURL","u","fileExt","split","pop","toLowerCase","isModel","maxWidth","auto-rotate","autoplay","camera-controls","ar-status","isVideo","muted","autoPlay","controlsList","loop","preload","alt","initialValues","meta","validate","values","changes","animation_url","image","Form","Group","controlId","NFTID","Label","Control","onChange","name","disabled","editable","type","placeholder","value","description","attributes","insert","remove","push","map","val","idx","formattedVal","inputType","max_value","display_type","moment","unix","format","origin","trait_type","onClick","Text","external_url","youtube_url","Checkout","walletConnected","setIsWalletConnected","setProvider","loadingCheckout","setLoadingCheckout","modalDetails","setModalDetails","window","ethereum","Web3Provider","listAccounts","handleClose","onClose","handleConnectWallet","e","request","method","handleCheckout","order","ExpiresAt","isBefore","title","message","clearOrder","signer","getSigner","contractClient","contractWithSigner","connect","purchase","BigNumber","from","OrderID","replaceAll","PriceDetails","GasFee","TotalPriceInWei","trxn","axios","post","hash","nftMeta","handleDone","multiline","LineItems","li","data-tip","marginLeft","readOnly","etherValue","usdValue","Button","variant","isCounterfeit","Spinner","animation","size","role","aria-hidden","Modal","show","onHide","Header","closeButton","Title","Body","Footer","Counterfeit","search","useLocation","history","useHistory","query","URLSearchParams","contractParam","get","tokenParam","includeRugPullParam","counterfeitContractAddr","setCounterfeitContractAddr","counterfeitTokenId","setCounterfeitTokenId","includeRugPull","setIncludeRugPull","add","rugPullDate","setRugPullDate","rugPullTime","setRugPullTime","checkoutReady","setIsCheckoutReady","isCheckingOut","setIsCheckingOut","setOrder","rugPullMeta","setRugPullMeta","quickloadPreview","setQuickloadPreview","loadingPreview","setLoadingPreview","params","append","hasTokenDetails","previewCounterfeit","useCallback","preventDefault","rugPullDateTime","resp","o","data","PriceUSCents","alert","handleClear","class","Card","minHeight","parts","length","details","parseAndSetCounterfeitAddr","Check","checked","label","v","Custom","setNFTMeta","previewCustom","TakeOwnership","priceParams","setPriceParams","isKeyTokenOwner","setIsKeyTokenOwner","setContractClient","reader","readContract","priceModifierHashCount","hashCountModifier","priceModifierTotalMintedCount","totalCountModifier","priceModifierIntervalCount","intervalCountModifier","intervalStartUnixSeconds","intervalLengthSeconds","intervalStartDate","intervalDuration","duration","humanize","hashCountMutliplier","totalCountMultiplier","timeMultiplier","accounts","ownerOf","ownerOfKey","handleTakeOwnership","takeOwnership","FAQ","padding","borderRadius","App","exact","path","component","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.926dce08.chunk.js","sourcesContent":["const config = {\n    // apiHost: \"http://localhost:8000\",\n    apiHost: \"https://otc-nft-api.herokuapp.com\",\n    env: \"rinkeby\",\n    ethAPIProvider: \"https://eth-rinkeby.alchemyapi.io/v2/sl7kpn-EhhbJ_6B39V4uuMQNzGRjl-ei\",\n    etherscanAPIKey: null,\n    contractAddr: \"0xDC876c23Cf2f6AB6000a54e0587Dffa0A2c17151\",\n    nftAddr: \"0x00149C791aA70e2970eA2d90218fB66B46888a5D\",\n    keyToken: 42069\n}\n\nexport default config;","import React, { useEffect, useState } from 'react';\nimport { Navbar, Nav, Row, Col, Container } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { ethers } from \"ethers\";\nimport config from '../../services/config.js';\n\nconst abi = [\n\t\"function basePriceUSD() public view returns (uint256)\",\n    \"function balances(uint256) public view returns (uint256)\"\n]\n\nfunction NavBar() {\n    let [ readProvider, setReadProvider ] = useState(null);\n    let [ currBasePrice, setCurrBasePrice ] = useState(null);\n    let [ currOwnerBal, setCurrOwnerBal ] = useState(null);\n\n    let sub = \"\";\n    if (config.env) {\n        sub = `${config.env}.`;\n    }\n    let contractURL = `https://${sub}etherscan.io/address/${config.contractAddr}#readContract`;\n\n\n\n    useEffect(() => {\n        const provider = new ethers.providers.EtherscanProvider(config.env, config.etherscanAPIKey);\n        setReadProvider(provider);\n    }, []);\n\n    useEffect(() => {\n        let f = async () => {\n            if (!readProvider) { return ;}\n            try {\n                let contract = new ethers.Contract(config.contractAddr, abi, readProvider);\n                let basePrice = await contract.basePriceUSD();\n                setCurrBasePrice(basePrice.toNumber());\n\n                let ownerBal = await contract.balances(0);\n                setCurrOwnerBal(ethers.utils.formatEther(ownerBal.toString()));\n            } catch (e) {\n                console.log(\"error trying to get base usd price\", e)\n            }\n        };\n        f();\n    }, [readProvider]);\n\n    return (\n        <div style={{backgroundImage: \"linear-gradient(to right, #5f3be3, #e33b3b)\", boxShadow: \"3px 3px 6px #5f3be3\", marginBottom:\"35px\", color:\"white\"}}>\n            { config.env ? <span style={{position:\"absolute\", opacity:\"30%\"}}>{config.env}</span> : null}\n            <Container>\n                <Row style={{paddingTop:\"10px\"}}>\n                    <Col className=\"col-md-8\">\n                        <h1 style={{fontFamily: \"'Rock Salt', cursive\"}}>Over the Counter</h1> \n                        <h5 style={{fontFamily: \"'Raleway', sans-serif\", bottom:\"0px\"}}>NFTs for the Masses</h5> \n                    </Col>\n                    { currBasePrice && <Col md={{span:3, offset:1}}>\n                        <h5 style={{fontFamily: \"'Raleway', sans-serif\", bottom:\"0px\", opacity:\"60%\", fontSize:\"14px\"}}>NFT Base Price: ${currBasePrice} </h5> \n                        <h5 style={{fontFamily: \"'Raleway', sans-serif\", bottom:\"0px\", opacity:\"60%\", fontSize:\"14px\"}}>Owner Balance: {currOwnerBal}&nbsp;Eth </h5> \n                    </Col> }\n                </Row>  \n                <Navbar sticky=\"top\" expand=\"md\" className=\"navbar-dark\" style={{marginBotom:\"15px\"}}>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"float-right\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav defaultActiveKey=\"home\">\n                            <Nav.Link as={Link} eventKey=\"home\" to={`/`}>Home</Nav.Link> \n                            <Nav.Link as={Link} eventKey=\"counterfeit\" to={`/counterfeit`}>Counterfeit</Nav.Link> \n                            <Nav.Link as={Link} eventKey=\"custom\" to={`/custom`}>NFT the Web</Nav.Link> \n                            <Nav.Link as={Link} eventKey=\"own\" to={`/own`}>Own this Market</Nav.Link> \n                            <Nav.Link as={Link} eventKey=\"faq\" to={`/faq`}>FAQs</Nav.Link> \n                            <Nav.Link  href={contractURL} target=\"_blank\" rel=\"noreferrer\">Smart Contract</Nav.Link>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n            </Container>\n        </div>\n    )\n}\n\nexport default NavBar;","import React, { Component, useState } from 'react';\nimport { Row, Col, Jumbotron, Figure } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\n\nfunction Home(props) {\n\n\treturn (\n\t\t<div>\n\t\t\t<Jumbotron className=\"\">\t\n\t\t\t\t<h1 className=\"display-5\">Get your non-fungibles over the counter</h1>\n\t\t\t\t<p className=\"lead\">Why pay millions of dollars for an NFT when you can get the same high quality product fresh and certified from the Over the Counter market?</p>\n\t\t\t\t<p className=\"lead\">Over the Counter is the easiest and cheapest place to mint an NFT for any digital asset you would like to own, so that you can take advantage of the investment opportunity of a lifetime.</p>\n\t\t\t\t<hr style={{backgroundImage: \"linear-gradient(to right, #5f3be3, #e33b3b)\", height:\"1px\"}} />\n\t\t\t\t<p>Ready to get started? Head on over to the <Link to=\"counterfeit\">minting presses</Link> to try it out. Curious to learn more about how it works? Keep reading below or check out our FAQs.</p>\n\t\t\t\t<p className=\"lead\">\n\t\t\t\t\t<Link to=\"faq\" className=\"btn btn-primary btn-sm\">Learn more</Link>\n\t\t\t\t\t<Link to=\"own\" className=\"btn btn-default btn-sm\">Buy this marketplace</Link>\n\t\t\t\t</p>\n\t\t\t</Jumbotron>\n\n\t\t\t<hr style={{backgroundImage: \"linear-gradient(to right, #5f3be3, #e33b3b)\", height:\"25px\"}}/>\n\n\t\t\t<Jumbotron className=\"\">\n\t\t\t\t<Row>\n\t\t\t\t\t<Col className=\"col-md-6 col-12\">\n\t\t\t\t\t\t<Figure >\n\t\t\t\t\t\t\t<Figure.Image\n\t\t\t\t\t\t\t\theight={300}\n\t\t\t\t\t\t\t\tsrc=\"https://images.unsplash.com/photo-1501066927591-314112b5888e?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80\"\n\t\t\t\t\t\t\t\tstyle={{boxShadow: \"3px 3px 6px #5f3be3\"}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Figure.Caption>\n\t\t\t\t\t\t\t\tYour future car (Lamborghini)\n\t\t\t\t\t\t\t</Figure.Caption>\n\t\t\t\t\t\t</Figure>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col className=\"col-md-6 col-12\">\n\t\t\t\t\t\t<hr style={{backgroundImage: \"linear-gradient(to right, #5f3be3, #e33b3b)\", height:\"1px\", marginTop:\"0px\"}} />\n\t\t\t\t\t\t<h1 className=\"display-5\">Bootlegs</h1>\n\t\t\t\t\t\t<hr style={{backgroundImage: \"linear-gradient(to right, #5f3be3, #e33b3b)\", height:\"1px\"}} />\n\t\t\t\t\t\t<div className=\"lead\">\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tLet say you see another (expensive) NFT that makes you think, “Wow, this should belong to me so I can brag about it at parties or sell it or whatever.”\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tWhile you may have had to <a target=\"_blank\" rel=\"noreferrer\" href=\"https://www.theverge.com/2021/3/22/22344937/jack-dorsey-nft-sold-first-tweet-ethereum-cryptocurrency-twitter\">pay millions of dollars</a> to be the owner of that thing on some other platforms, Over the Counter believes that NFTs are meant to be for the masses and therefore offers a reasonable price to own any digital asset your heart desires. \n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\t\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Link to=\"counterfeit\" className=\"btn btn-danger btn-lg float-right\">Let's funge some non-fungibles</Link>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t\n\t\t\t</Jumbotron>\n\n\t\t\t<hr style={{backgroundImage: \"linear-gradient(to right, #5f3be3, #e33b3b)\", height:\"25px\"}}/>\n\n\t\t\t<Jumbotron className=\"\">\n\t\t\t\t<Row>\n\t\t\t\t\t<Col className=\"col-md-6 col-12\">\n\t\t\t\t\t\t<hr style={{backgroundImage: \"linear-gradient(to right, #5f3be3, #e33b3b)\", height:\"1px\", marginTop:\"0px\"}} />\n\t\t\t\t\t\t<h1 className=\"display-5\">Own the Web</h1>\n\t\t\t\t\t\t<hr style={{backgroundImage: \"linear-gradient(to right, #5f3be3, #e33b3b)\", height:\"1px\"}} />\n\t\t\t\t\t\t<div className=\"lead\">\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tAt OTC, we believe that everything on the web should be ownable as an NFT, so we've made our platform do just that! If you see a website, image, CSS file, Tweet, or any other digital resource with a URL \n\t\t\t\t\t\t\t\tthat you know in your heart belongs to you just head on over to our <Link to=\"custom\">NFT the Web</Link> minting presses.\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tOnce you own the digital asset you had your eye on then you are free to do with it whatever you wish. For example, you should probably inform the content creator that you now own that digital asset and they’re\n\t\t\t\t\t\t\t\tgoing to need to bend to your will in regards to how it’s used. You are also free to resell that asset on a platform such as OpenSea or Electronic-Bay.com.\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Col>\n\n\t\t\t\t\t<Col className=\"col-md-6 col-12\">\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<Figure>\n\t\t\t\t\t\t\t\t\t<Figure.Image\n\t\t\t\t\t\t\t\t\t\theight={300}\n\t\t\t\t\t\t\t\t\t\tsrc=\"https://images.unsplash.com/photo-1518183214770-9cffbec72538?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80\"\n\t\t\t\t\t\t\t\t\t\tstyle={{boxShadow: \"3px 3px 6px #5f3be3\"}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Figure.Caption>\n\t\t\t\t\t\t\t\t\t\tYour future dollars (apprx. $119 American)\n\t\t\t\t\t\t\t\t\t</Figure.Caption>\n\t\t\t\t\t\t\t\t</Figure>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tCheck out the form letters and tips we have in our FAQ section about how to take ownership of your new digital asset. Congratulations, use it wisely!\n\t\t\t\t\t\t\t\t</p>\t\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Link to=\"custom\" className=\"btn btn-danger btn-lg float-right\">I'm ready to pwn the web!</Link>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t\n\t\t\t</Jumbotron>\n\n\t\t\t<hr style={{backgroundImage: \"linear-gradient(to right, #5f3be3, #e33b3b)\", height:\"25px\"}}/>\n\n\t\t\t<Jumbotron className=\"\">\n\t\t\t\t<Row>\n\t\t\t\t\t<Col className=\"col-md-12 col-12\">\n\t\t\t\t\t\t<hr style={{backgroundImage: \"linear-gradient(to right, #5f3be3, #e33b3b)\", height:\"1px\", marginTop:\"0px\"}} />\n\t\t\t\t\t\t<h1 className=\"display-5\">Authenticity</h1>\n\t\t\t\t\t\t<hr style={{backgroundImage: \"linear-gradient(to right, #5f3be3, #e33b3b)\", height:\"1px\"}} />\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<a target=\"_blank\" rel=\"noreferrer\" href=\"https://www.reddit.com/r/ethereum/comments/lzch1m/dont_use_cent_to_buy_tweets_or_any_other_closed/gq34xie?utm_source=share&utm_medium=web2x&context=3\">\n\t\t\t\t\t\t\t\t\t<Figure>\n\t\t\t\t\t\t\t\t\t\t<Figure.Image\n\t\t\t\t\t\t\t\t\t\t\theight={300}\n\t\t\t\t\t\t\t\t\t\t\tsrc=\"/whatisreal.png\"\n\t\t\t\t\t\t\t\t\t\t\tstyle={{boxShadow: \"3px 3px 6px #5f3be3\"}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<Figure.Caption>\n\t\t\t\t\t\t\t\t\t\t\tI love this comment so much that I own the NFT of it, minted right here on OTC.\n\t\t\t\t\t\t\t\t\t\t</Figure.Caption>\n\t\t\t\t\t\t\t\t\t</Figure>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<div className=\"lead\">\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tWe take NFT authenticity seriously here at OTC, which is why each and every digital asset that gets purchased on Over the Counter receives a proprietary Authenticity score. \n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tIt pays to be the first to mint any given digital asset so that you get the highest Authenticity score. As an asset is purchased more by the community, each subsequent token’s Authenticity goes down and its price goes up. Double ouch! \n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t\n\t\t\t</Jumbotron>\n\t\t</div>\n\t);\n}\n\n\nexport default Home;\n","import React, { Component, useEffect, useState } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport { Formik, FieldArray } from 'formik';\nimport moment from 'moment';\nimport { Trash } from 'react-bootstrap-icons';\n\nfunction NFTMeta(props) {\n    let isModel = (u) => {\n        let fileExt = u.split('.').pop();\n        if (!fileExt) {\n            return false;\n        }\n\n        return fileExt.toLowerCase() === \"glb\";\n    };\n\n    let isVideo = (u) => {\n        let fileExt = u.split('.').pop();\n        if (!fileExt) {\n            return false;\n        }\n\n        return fileExt.toLowerCase() === \"mp4\" || fileExt.toLowerCase() === \"ogg\" || fileExt.toLowerCase() === \"webm\" || fileExt.toLowerCase() === \"ogv\";\n    };\n\n    let displayElement = (handleChange, animationURL, imageURL) => {\n        if (animationURL) {\n            if (isModel(animationURL)) {\n                return <model-viewer style={{maxWidth:\"100%\"}} height=\"250px\" auto-rotate=\"true\" autoplay=\"true\" camera-controls=\"true\" src={animationURL} ar-status=\"not-presenting\"></model-viewer>\n            } \n            if (isVideo(animationURL)) {\n                return <video style={{maxWidth:\"100%\"}} height=\"250px\" muted={true} autoPlay={true} controlsList=\"nodownload\" loop={true} preload=\"auto\" src={animationURL}></video>\n            } \n        }\n\n        if (!imageURL) {\n            return <img style={{maxWidth:\"100%\", opacity:\"70%\"}} height=\"250px\" src=\"https://picsum.photos/400/300\" alt=\"Error loading contract pic\"></img>\n        }\n\n        return <img style={{maxWidth:\"100%\"}} height=\"250px\" src={imageURL} alt=\"Error loading contract pic\"></img>\n    };\n\n\treturn (\n\t\t<Formik\n            initialValues={props.meta}\n            validate={values => {\n                const errors = {};\n                return errors;\n            }}\n        >\n        {({\n         values,\n         handleChange\n       }) => (\n           <>\n             {props.changes && props.changes(values)}\n                <Row>\n                    <Col className=\"col-md-6\">\n                        <div style={{maxWidth:\"100%\"}}>\n                            {displayElement(handleChange, values.animation_url, values.image)}\n                        </div>\n                    </Col>\n                    <Col className=\"col-md-6\">\n                        <Form.Group controlId={\"nftmeta-name\"+values.NFTID}>\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control onChange={handleChange} name=\"name\" disabled={!props.editable} type=\"text\" placeholder=\"NFT Name, go nuts\" value={values.name} />\n                        </Form.Group>\n                        <Form.Group controlId={\"nftmeta-desc\"+values.NFTID}>\n                            <Form.Label>Description</Form.Label>\n                            <Form.Control as=\"textarea\" disabled={!props.editable} onChange={handleChange} name=\"description\" style={{height:\"100%\"}} placeholder=\"NFT Description, make sure you sell its uniquness hard\" value={values.description} />\n                        </Form.Group>\n                    </Col>\n                </Row>\n                <hr style={{backgroundImage: \"linear-gradient(to right, #5f3be3, #e33b3b)\", height:\"1px\"}} />\n                <h4>Attributes</h4>\n                <Row>\n                    { !!values.attributes && <FieldArray name=\"attributes\">\n                    {({ insert, remove, push }) => (\n                        values.attributes.map((val, idx) => { \n                            val.formattedVal = val.value;\n\n                            if (val.value === \"number\") {\n                                val.inputType = \"number\";\n                            } else {\n                                val.inputType = \"text\";\n                            }\n\n                            if (val.max_value) {\n                                val.formattedVal = `${val.value} of ${val.max_value}`;\n                            }\n                            \n                            if (val.display_type === \"date\") {\n                                val.inputType = \"date\";\n                                val.formattedVal = moment.unix(val.value).format(\"YYYY-MM-DD\");\n                            }\n\n                            let disabled = !props.editable || val.origin === \"otc\" || !!val.max_value;\n\n                            return <Col key={idx} className=\"col-4\">\n                                {\n                                    <Form.Group controlId={\"nftmeta\"+idx}>\n                                        { !!val.trait_type ? <Form.Label>{`${val.trait_type}`}</Form.Label> : <Form.Label style={{opacity:\"20%\"}}>No trait type</Form.Label> } {!disabled ? <Trash onClick={()=> remove(idx)}></Trash> : null}\n                                        <Form.Control onChange={handleChange} name={`attributes.${idx}.value`} disabled={disabled} type={val.inputType} value={val.formattedVal} />\n                                        {val.display_type ? <Form.Text className=\"text-muted\">\n                                            {val.display_type}\n                                        </Form.Text> : null}\n                                    </Form.Group>\n                                }\n                            </Col>\n                        })\n                    )}\n                    </FieldArray> }\n                </Row>\n                <Row>\n                    <Col className=\"col-md-12\">\n                        <Form.Group controlId={\"nftmeta-img-url\"+values.NFTID}>\n                            <Form.Label>Image URL</Form.Label>\n                            <Form.Control onChange={handleChange} name=\"image\" disabled={!props.editable} type=\"text\" placeholder=\"Used to visually represent the thing you own\" value={values.image} />\n                        </Form.Group>\n\n                        <Form.Group controlId={\"nftmeta-animation-url\"+values.NFTID}>\n                            <Form.Label>Animation URL</Form.Label>\n                            <Form.Control onChange={handleChange} name=\"animation_url\" disabled={!props.editable} type=\"text\" value={values.animation_url} placeholder=\"It's like an image from Harry Potter\" />\n                        </Form.Group>\n\n                        <Form.Group controlId={\"nftmeta-ext-url\"+values.NFTID}>\n                            <Form.Label>External URL</Form.Label>\n                            <Form.Control onChange={handleChange} name=\"external_url\"  disabled={!props.editable} type=\"text\" value={values.external_url} placeholder=\"This is the URL to the thing you want to own (e.g., a comment on Reddit)\" />\n                        </Form.Group>\n\n                        <Form.Group controlId={\"nftmeta-youtube-url\"+values.NFTID}>\n                            <Form.Label>Youtube URL</Form.Label>\n                            <Form.Control onChange={handleChange} name=\"youtube_url\"  disabled={!props.editable} type=\"text\" value={values.youtube_url} placeholder=\"Youtube was a popular site for hosting videos in the early 2000s (not required)\" />\n                        </Form.Group>\n\n                    </Col>\n                </Row>\n                </>\n            )}\n\t\t</Formik>\n\t);\n}\n\n\nexport default NFTMeta;\n\n\n// {\n// \t\"OrderID\": \"50bc8957-216d-4974-9f62-e7646e412071\",\n// \t\"NFTID\": \"293285d3-8467-40c8-a8cf-d0e3b614c676\",\n// \t\"Hash\": \"ec4955ca-b045-4d8b-8da1-56787ea0a74b\",\n// \t\"SubtotalInWei\": 100000000000000000,\n// \t\"EstimatedGasCost\": 300000000000000,\n// \t\"TotalPriceInWei\": 100300000000000000\n//   }","import React, { Component, useEffect, useState } from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport { Row, Col, Form, Button, Card, Spinner, Modal } from 'react-bootstrap';\nimport axios from 'axios';\nimport config from '../../services/config.js';\n// import Web3 from 'web3';\nimport { ethers } from \"ethers\";\nimport moment from 'moment';\nimport { Check, InfoCircleFill } from 'react-bootstrap-icons';\n\n// const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n// web3.eth.getAccounts().then(console.log);\n\nconst abi = [\n\t// \"setIntervalDetails(uint256 _intervalStartUnixSeconds, uint256 _intervalLengthSeconds)\",\n\t\"function ownerOf(uint256 tokenId) view returns (address)\",\n\t\"function owner() public view returns (address)\",\n\t\"function basePriceUSD() public view returns (uint64)\",\n\t\"function priceModifierHashCount() public view returns (int64)\",\n\t\"function priceModifierTotalMintedCount() public view returns (int64)\",\n\t\"function priceModifierIntervalCount() public view returns (int64)\",\n\t\"function intervalLengthSeconds() public view returns (uint64)\",\n\t\"function intervalStartUnixSeconds() public view returns (uint64)\",\n\t\"function takeOwnership() public\",\n\t\"function purchase(uint256 _order, uint256 gasMoney) external payable\"\n]\n\nfunction Checkout(props) {\n\tlet [ walletConnected, setIsWalletConnected ] = useState(false);\n\tlet [ provider, setProvider ] = useState(null);\n\tlet [ loadingCheckout, setLoadingCheckout ] = useState(false);\n    let [ modalDetails, setModalDetails ] = useState({});\n\n\n\tuseEffect(() => {\n\t\tif (window.ethereum) {\n\t\t\tconst provider = new ethers.providers.Web3Provider(window.ethereum);\n\t\t\tsetProvider(provider);\n\t\t}\n\t}, []);\n\n\tuseEffect(() => {\n\t\tlet f = async () => {\n\t\t\tif (!provider) { return; }\n\t\t\tsetIsWalletConnected(await provider.listAccounts() > 0);\n\t\t};\n\t\tf();\n\t}, [provider]);\n\n\n    let handleClose = () => {\n        if (modalDetails.onClose) {\n            modalDetails.onClose();\n        }\n        setModalDetails({});\n    }\n\n\tlet handleConnectWallet = async (e) => {\n\t\ttry {\n\t\t\tawait window.ethereum.request({ method: 'eth_requestAccounts' });\n\t\t\tsetIsWalletConnected(true);\n\t\t} catch (e) {\n\t\t\tconsole.log(\"Error requesting accounts\", e);\n\t\t}\n\t};\n\n\tlet handleCheckout = async (e) => {\n\t\tsetLoadingCheckout(true);\n\t\ttry {\n\t\t\tlet expirationTime = moment(props.order.ExpiresAt);\n\t\t\tif (expirationTime.isBefore(moment())) {\n\t\t\t\tsetModalDetails({\n                    title: \"That order has expired\",\n                    message: \"That order has expired, try recreating the NFT you are trying to purchase\",\n                    onClose: () => {\n                        props.clearOrder();\n                    }\n                });\n                return;\n\t\t\t} \n\n\t\t\tlet signer = provider.getSigner();\n\t\t\tlet contractClient = new ethers.Contract(config.contractAddr, abi, provider);\n\t\t\tlet contractWithSigner = contractClient.connect(signer);\n            const trxn = await contractWithSigner.purchase(ethers.BigNumber.from(`0x${props.order.OrderID.replaceAll(\"-\", \"\")}`), ethers.BigNumber.from(props.order.PriceDetails.GasFee), {value: ethers.BigNumber.from(props.order.TotalPriceInWei+\"\")});\n            \n            // this is ugly but IDGAF\n            try {\n                // TODO: this is fine, but the real source of truth should come from watching the logs of the Purchase function\n                await axios.post(`${config.apiHost}/api/v1/mint/${props.order.OrderID}`, {\n                    \"OrderID\": props.order.OrderID,\n                    \"PaymentTransactionID\": trxn.hash,\n                    \"DestinationAddress\": trxn.from,\n                    \"NFTMeta\": props.nftMeta\n                });\n            } catch (e) {\n                console.log(\"Error finishing executing request to mint\", e);\n                setModalDetails({\n                    title: \"Uh oh!\",\n                    message: \"Something went wrong, but we'll get your NFT minted either way. Please contact me for technical assistance.\"\n                });\n                props.clearOrder();\n                return\n            }\n\n            setModalDetails({\n                title: \"Success!\",\n                message: \"Thank you! You'll have a newly minted NFT available for your pleasure soon.\",\n                onClose: () => {\n                    props.clearOrder();\n                    props.handleDone();\n                }\n            });\n\t\t} catch (e) {\n\t\t\tconsole.log(\"Error executing transaction\", e);\n\t\t\tsetModalDetails({\n                title: \"Uh oh!\",\n                message: \"Hmm, it looks like we ran into some trouble processing this request\",\n            onClose: () => {\n                    props.clearOrder();\n                }\n            });\n\t\t}\n\t\tsetLoadingCheckout(false);\n\t};\n\n\treturn (\n\t\t<>\n            <div>\n                <hr style={{marginTop:\"30px\", marginBottom:\"30px\"}}></hr>\n                <Row>\n                    <Col className=\"col-md-6 col-12\">\n                        <Form>\n                            <Form.Group controlId=\"totalPrice\">\n                                <ReactTooltip\n                                    multiline={true}>\n                                        {props.order.PriceDetails.LineItems.map((li, idx) => {\n                                            return <div key={idx}>{li}</div>\n                                        })}\n                                </ReactTooltip>\n                                    <Form.Label><h5>Total Price</h5></Form.Label><InfoCircleFill data-tip=\"price-details\" style={{marginLeft:\"10px\"}}></InfoCircleFill>\n                                    <Form.Control readOnly={true} type=\"text\" value={`${props.order.etherValue} ETH - ($${props.order.usdValue} + gas)`} />\n                            </Form.Group>\n                            <Form.Group controlId=\"connectWallet\">\n                            <Button disabled={walletConnected} variant=\"primary\" onClick={handleConnectWallet}>\n                                1. Connect Wallet\n                            </Button>\n                            { props.isCounterfeit ? <Form.Text className=\"text-muted\">\n                                By submitting this transaction, you are acknowledging that you understand that are purchasing a \"copy\" of an NFT from a different contract.\n                                The NFT you will receive does not pretend to be the original and service of contract metadata could potentially be hindered by the other party.\n                                You are also acknowledging that this platform is someone's side project, and therefore support for any technical issues is likely to be slow but earnest.\n                            </Form.Text>\n                            : <Form.Text className=\"text-muted\">\n                                By submitting this transaction, you are acknowledging that this platform is someone's side project, and therefore support for any technical issues is likely to be slow but earnest.\n                            </Form.Text> }\n                            </Form.Group>\n                            <Form.Group>\n                            <Button disabled={!walletConnected || loadingCheckout} variant=\"primary\" onClick={handleCheckout}>\n                                { loadingCheckout ? <Spinner\n                                    as=\"span\"\n                                    animation=\"grow\"\n                                    size=\"sm\"\n                                    role=\"status\"\n                                    aria-hidden=\"true\"\n                                /> : \"2. Finish Transaction to Mint NFT\" }\n                            </Button>\n                            </Form.Group>\n                        </Form>\n                    </Col>\n                </Row>\n\n            </div>\n\n\t\t\t<Modal show={!!modalDetails.title} onHide={handleClose}>\n\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t<Modal.Title>{modalDetails.title}</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>{modalDetails.message}</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t<Button variant=\"secondary\" onClick={handleClose}>\n\t\t\t\t\tClose\n\t\t\t\t</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t</>\n\t);\n}\n\n\nexport default Checkout;\n\n\n// {\n// \t\"OrderID\": \"50bc8957-216d-4974-9f62-e7646e412071\",\n// \t\"NFTID\": \"293285d3-8467-40c8-a8cf-d0e3b614c676\",\n// \t\"Hash\": \"ec4955ca-b045-4d8b-8da1-56787ea0a74b\",\n// \t\"SubtotalInWei\": 100000000000000000,\n// \t\"EstimatedGasCost\": 300000000000000,\n// \t\"TotalPriceInWei\": 100300000000000000\n//   }","import React, { Component, useEffect, useState, useCallback } from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport { Row, Col, Form, Button, Card, Spinner } from 'react-bootstrap';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport NFTMeta from '../ui/nftmeta.js';\nimport Checkout from '../ui/checkout.js';\nimport axios from 'axios';\nimport config from '../../services/config.js';\n// import Web3 from 'web3';\nimport { ethers } from \"ethers\";\nimport moment from 'moment';\nimport { InfoCircleFill } from 'react-bootstrap-icons';\n\n// const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n// web3.eth.getAccounts().then(console.log);\n\n// const ethEnabled = () => {\n// \tif (window.ethereum) {\n// \t  window.web3 = new Web3(window.ethereum);\n// \t  window.ethereum.enable();\n// \t  return true;\n// \t}\n// \treturn false;\n// }\n\n\nfunction Counterfeit(props) {\n\t// https://testnets.opensea.io/assets/0x99bae45fb8abab73d8969fad837f5287ec294eea/1\n\tlet { search } = useLocation();\n\tconst history = useHistory()\n\n\tconst query = new URLSearchParams(search);\n\tconst contractParam = query.get('contract');\n\tconst tokenParam = query.get('token');\n\tconst includeRugPullParam = query.get('rugpull');\n\n\tlet [ counterfeitContractAddr, setCounterfeitContractAddr ] = useState(contractParam);\n\tlet [ counterfeitTokenId, setCounterfeitTokenId ] = useState(tokenParam);\n\tlet [ includeRugPull, setIncludeRugPull ] = useState(!!includeRugPullParam);\n\tlet [ rugPullDate, setRugPullDate ] = useState(moment().add(1, \"month\").format(\"YYYY-MM-DD\"));\n\tlet [ rugPullTime, setRugPullTime ] = useState(\"12:00\");\n\tlet [ checkoutReady, setIsCheckoutReady ] = useState(false);\n\tlet [ isCheckingOut, setIsCheckingOut ] = useState(false);\n\tlet [ order, setOrder ] = useState(null);\n\tlet [ rugPullMeta, setRugPullMeta ] = useState(null);\n\tlet [ quickloadPreview, setQuickloadPreview ] = useState(contractParam && tokenParam);\n\tlet [ loadingPreview, setLoadingPreview ] = useState(false);\n\n\n\tuseEffect(() => {\n\t\tconst params = new URLSearchParams()\n\t\tif (counterfeitContractAddr) {\n\t\t\tparams.append(\"contract\", counterfeitContractAddr)\n\t\t} \n\t\tif (counterfeitTokenId) {\n\t\t\tparams.append(\"token\", counterfeitTokenId)\n\t\t}\n\t\tif (includeRugPull) {\n\t\t\tparams.append(\"rugpull\", true)\n\t\t}\n\t\thistory.push({search: params.toString()})\n\n\n\t\tlet hasTokenDetails = !!counterfeitContractAddr && !!counterfeitTokenId;\n\t\tif (includeRugPull) {\n\t\t\tsetIsCheckoutReady(hasTokenDetails && !!rugPullDate && !!rugPullTime);\n\t\t\treturn;\n\t\t}\n\t\tsetIsCheckoutReady(hasTokenDetails);\n\t}, [counterfeitContractAddr, counterfeitTokenId, includeRugPull, rugPullDate, rugPullTime, history]);\n\n\tuseEffect(() => {\n\t\tsetIsCheckingOut(!!order);\n\t}, [order]);\n\n\tlet parseAndSetCounterfeitAddr = (val) => {\n\t\tlet parts = val.split(\"assets\");\n\t\tif (!parts || parts.length !== 2) {\n\t\t\tsetCounterfeitContractAddr(val);\n\t\t\treturn\n\t\t}\n\t\t\n\t\tlet details = parts[1].split(\"/\");\n\t\tif (!details || details.length !== 3) {\n\t\t\tsetCounterfeitContractAddr(val);\n\t\t\treturn\n\t\t}\n\n\t\tsetCounterfeitContractAddr(details[1]);\n\t\tsetCounterfeitTokenId(details[2]);\n\t}\n\n\tlet previewCounterfeit = useCallback(async (e) => {\n\t\t!!e && e.preventDefault();\n\t\tsetLoadingPreview(true);\n\t\tconsole.log(counterfeitTokenId, counterfeitContractAddr);\n\n\t\ttry {\n\t\t\tlet rugPullDateTime;\n\t\t\tif (includeRugPull) {\n\t\t\t\trugPullDateTime = moment(rugPullDate + \" \" + rugPullTime).format();\n\t\t\t}\n\n\t\t\tlet resp = await axios.post(`${config.apiHost}/api/v1/preview`, {\n\t\t\t\t\"Type\": \"contract\",\n\t\t\t\t\"ContractAddr\": counterfeitContractAddr,\n\t\t\t\t\"CounterfeitTokenID\": counterfeitTokenId,\n\t\t\t\t\"RugPullTime\": rugPullDateTime,\n\t\t\t});\n\n\t\t\tlet o = resp.data;\n\n\t\t\tconst etherValue = ethers.utils.formatEther(o.TotalPriceInWei+\"\");\n\t\t\tconsole.log(etherValue);\n\n\t\t\to.etherValue = etherValue;\n\n\t\t\to.usdValue = o.PriceDetails.PriceUSCents / 100;\n\n\t\t\tsetOrder(o);\n\n\t\t} catch (e) {\n\t\t\tconsole.log(\"Error occurred when attempting to go to checkout.\", e);\n\t\t\talert(\"It looks like that NFT isn't yet supported by OTC; we're working on it, but in the meantime try another one.\")\n\t\t}\n\t\tsetLoadingPreview(false);\n\t}, [includeRugPull, rugPullDate, rugPullTime, counterfeitContractAddr, counterfeitTokenId]);\n\n\tuseEffect(() => {\n\t\tif (!checkoutReady) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (quickloadPreview) {\n\t\t\tsetQuickloadPreview(false);\n\t\t\tpreviewCounterfeit();\n\t\t}\n\n\t}, [checkoutReady, quickloadPreview, previewCounterfeit])\n\n\tlet handleClear = (e) => {\n\t\tif (e) {\n\t\t\te.preventDefault();\n\t\t}\n\t\tsetCounterfeitContractAddr(\"\");\n\t\tsetCounterfeitTokenId(\"\");\n\t\tsetIncludeRugPull(false);\n\t\tsetOrder(null);\n\t\tsetRugPullMeta(null);\n\t};\n\n\tlet handleEdit = (e) => {\n\t\te.preventDefault();\n\t\tsetOrder(null);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<hr style={{backgroundImage: \"linear-gradient(to right, #5f3be3, #e33b3b)\", height:\"1px\", marginTop:\"0px\"}} />\n                <h1 class=\"display-5\">Counterfeit</h1> <h6 style={{opacity:\"50%\"}}>This is a pun</h6>\n            <hr style={{backgroundImage: \"linear-gradient(to right, #5f3be3, #e33b3b)\", height:\"1px\"}} />\n\t\t\t<Row>\n\t\t\t\t<Col className=\"col-md-4 col-12\" style={{marginTop:\"15px\"}}>\n\t\t\t\t\t<Card style={{minHeight: \"100%\", boxShadow: \"1px 1px 4px #5f3be3\", marginTop:\"15px\"}}>\n                        <Card.Body>\n                            <Card.Title>Step 1</Card.Title>\n                            <Card.Text>\n\t\t\t\t\t\t\t<a href=\"https://testnets.opensea.io/assets\" target=\"_blank\" rel=\"noreferrer\">Find an NFT</a> you love or want to sell.\n                            </Card.Text>\n                        </Card.Body>\n\t\t\t\t\t</Card>\n\t\t\t\t</Col>\n\t\t\t\t<Col className=\"col-md-4 col-12\" style={{marginTop:\"15px\"}}>\n\t\t\t\t\t<Card style={{minHeight: \"100%\", boxShadow: \"1px 1px 4px #5f3be3\", marginTop:\"15px\"}}>\n                        <Card.Body>\n                            <Card.Title>Step 2</Card.Title>\n                            <Card.Text>\n\t\t\t\t\t\t\t\tPaste the URL or contract address into the text box below.\n                            </Card.Text>\n                        </Card.Body>\n\t\t\t\t\t</Card>\n\t\t\t\t</Col>\n\t\t\t\t<Col className=\"col-md-4 col-12\" style={{marginTop:\"15px\"}}>\n\t\t\t\t\t<Card style={{minHeight: \"100%\", boxShadow: \"1px 1px 4px #5f3be3\", marginTop:\"15px\"}}>\n                        <Card.Body>\n                            <Card.Title>Step 3</Card.Title>\n                            <Card.Text>\n\t\t\t\t\t\t\t\tProfit.\n                            </Card.Text>\n                        </Card.Body>\n\t\t\t\t\t</Card>\n\t\t\t\t</Col>\n\t\t\t</Row>  \n\n\t\t\t<hr style={{backgroundImage: \"linear-gradient(to right, #5f3be3, #e33b3b)\", height:\"1px\", marginTop:\"45px\"}}/>\n\n\t\t\t<Form>\n\t\t\t\t<Form.Group controlId=\"counterfeitContractAddr\">\n\t\t\t\t\t<Form.Label>Contract Address</Form.Label>\n\t\t\t\t\t<Form.Control disabled={isCheckingOut} value={counterfeitContractAddr} onChange={(e) => parseAndSetCounterfeitAddr(e.target.value)} type=\"text\" placeholder=\"Paste a link from OpenSea or any ERC721 contract's ethereum address\" />\n\t\t\t\t\t<Form.Text className=\"text-muted\">\n\t\t\t\t\t\tIf this is wrong I don't want to be right.\n\t\t\t\t\t</Form.Text>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t{ counterfeitContractAddr ? <>\n\t\t\t\t\t<Form.Group controlId=\"counterfeitTokenId\">\n\t\t\t\t\t\t<Form.Label>Token ID</Form.Label>\n\t\t\t\t\t\t<Form.Control disabled={isCheckingOut} value={counterfeitTokenId} onChange={(e) => setCounterfeitTokenId(e.target.value)} type=\"text\" placeholder=\"Input the Token ID you want\" />\n\t\t\t\t\t</Form.Group> \n\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col className=\"col-md-4 col-12\">\n\t\t\t\t\t\t\t<Form.Group controlId=\"includeRugPull\">\n\t\t\t\t\t\t\t\t<Form.Check disabled={isCheckingOut} checked={includeRugPull} onChange={(e) => setIncludeRugPull(e.target.checked)} type=\"checkbox\" label=\"Include Rug Pull\" />\n\t\t\t\t\t\t\t\t<Form.Text className=\"text-muted\">\n\t\t\t\t\t\t\t\t\tA rugpull will change the metadata of the contract on a certain date; let's you do some pretty classic pranks on your friends. Be aware that this is associated with an increased cost.\n\t\t\t\t\t\t\t\t</Form.Text>\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t{ includeRugPull ? <>\n\t\t\t\t\t\t\t\t<Col className=\"col-md-4 col-12\">\n\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"rugPullTime\">\n\t\t\t\t\t\t\t\t\t\t<Form.Control disabled={isCheckingOut} value={rugPullDate} onChange={(e) => setRugPullDate(e.target.value)} type=\"date\" />\n\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col className=\"col-md-4 col-12\">\n\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"rugPullTime\">\n\t\t\t\t\t\t\t\t\t\t<Form.Control disabled={isCheckingOut} value={rugPullTime} onChange={(e) => setRugPullTime(e.target.value)} type=\"time\" />\n\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t: null }\n\t\t\t\t\t</Row>\n\t\t\t\t\t</>\n\t\t\t\t\t: null\n\t\t\t\t}\n\n\t\t\t\t{\n\t\t\t\t\t!isCheckingOut ? \n\t\t\t\t\t<Button variant=\"primary\" onClick={previewCounterfeit} disabled={!checkoutReady || loadingPreview}>\n\t\t\t\t\t\t{ loadingPreview ? <Spinner\n\t\t\t\t\t\t\tas=\"span\"\n\t\t\t\t\t\t\tanimation=\"grow\"\n\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\trole=\"status\"\n\t\t\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\t\t/> : \"Preview\" }\n\t\t\t\t\t</Button>\n\t\t\t\t\t: \t\n\t\t\t\t\t<>\n\t\t\t\t\t<Button variant=\"primary\" onClick={handleEdit}>\n\t\t\t\t\t\tEdit\n\t\t\t\t\t</Button>\t\t\t\n\t\t\t\t\t<Button variant=\"default\" onClick={handleClear}>\n\t\t\t\t\t\tClear\n\t\t\t\t\t</Button>\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t</Form>\n\n\t\t\t<hr style={{backgroundImage: \"linear-gradient(to right, #5f3be3, #e33b3b)\", height:\"1px\"}} />\n\n\t\t\t{ order ? <>\n\t\t\t\t<hr style={{marginTop:\"30px\", marginBottom:\"30px\"}}></hr>\n\t\t\t\t<Row>\n\t\t\t\t\t\t<Col className=\"col-md-6\">\n\t\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t\tContract Details\n\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t<NFTMeta meta={order.NFTMeta}></NFTMeta>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t{ includeRugPull ? <Col className=\"col-md-6\">\n\t\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t\tRug Pull Details\n\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t<NFTMeta meta={order.NFTMeta} editable={true} changes={(v) => setRugPullMeta(v)}></NFTMeta>\n\t\t\t\t\t\t</Col> : null }\n\t\t\t\t</Row> \n\t\t\t\t<Checkout order={order} nftMeta={rugPullMeta} handleDone={handleClear} clearOrder={() => setOrder(null)} isCounterfeit={true}></Checkout>\n\t\t\t\t</> : null\n\t\t\t}\n\n\t\t</div>\n\t);\n}\n\n\nexport default Counterfeit;\n\n\n// {\n// \t\"OrderID\": \"50bc8957-216d-4974-9f62-e7646e412071\",\n// \t\"NFTID\": \"293285d3-8467-40c8-a8cf-d0e3b614c676\",\n// \t\"Hash\": \"ec4955ca-b045-4d8b-8da1-56787ea0a74b\",\n// \t\"SubtotalInWei\": 100000000000000000,\n// \t\"EstimatedGasCost\": 300000000000000,\n// \t\"TotalPriceInWei\": 100300000000000000\n//   }","import React, { Component, useEffect, useState } from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport { Row, Col, Form, Button, Card, Spinner, Modal } from 'react-bootstrap';\nimport NFTMeta from '../ui/nftmeta.js';\nimport Checkout from '../ui/checkout.js';\nimport axios from 'axios';\nimport config from '../../services/config.js';\n// import Web3 from 'web3';\nimport { ethers } from \"ethers\";\nimport moment from 'moment';\nimport { InfoCircleFill } from 'react-bootstrap-icons';\n\nfunction Custom(props) {\n\t// https://testnets.opensea.io/assets/0x99bae45fb8abab73d8969fad837f5287ec294eea/1\n\n\tlet zeroNFTMeta = () => ({\n\t\timage: \"\",\n\t\texternal_url:\"\",\n\t\tyoutube_url:\"\",\n\t\tanimation_url:\"\",\n\t\tname: \"\",\n\t\tdescription: \"\",\n\t\tattributes:[]\n\t});\n\n\tlet [ nftMeta, setNFTMeta ] = useState(zeroNFTMeta());\n\tlet [ checkoutReady, setIsCheckoutReady ] = useState(false);\n\tlet [ isCheckingOut, setIsCheckingOut ] = useState(false);\n\tlet [ order, setOrder ] = useState(null);\n\tlet [ provider, setProvider ] = useState(null);\n\tlet [ loadingPreview, setLoadingPreview ] = useState(false);\n\n\n\tuseEffect(() => {\n\t\tif (nftMeta && nftMeta.name) {\n\t\t\tsetIsCheckoutReady(true);\n            return;\n\t\t}\n\t\tsetIsCheckoutReady(false);\n\t}, [nftMeta]);\n\n\tuseEffect(() => {\n\t\tsetIsCheckingOut(!!order);\n\t}, [order]);\n\n\n\tuseEffect(() => {\n\t\tif (window.ethereum) {\n\t\t\tconst provider = new ethers.providers.Web3Provider(window.ethereum);\n\t\t\tsetProvider(provider);\n\t\t}\n\t}, [order]);\n\n\tlet previewCustom = async (e) => {\n\t\tsetLoadingPreview(true);\n\t\te.preventDefault();\n\t\tconsole.log(nftMeta);\n\n\t\ttry {\n\t\t\tlet resp = await axios.post(`${config.apiHost}/api/v1/preview`, {\n\t\t\t\t\"Type\": \"custom\",\n                \"NFTMeta\": nftMeta,\n\t\t\t});\n\n\t\t\tlet o = resp.data;\n\n\t\t\tif (o.NFTMeta) {\n\t\t\t\tsetNFTMeta(o.NFTMeta);\n\t\t\t}\n\n\t\t\tconst etherValue = ethers.utils.formatEther(o.TotalPriceInWei+\"\");\n\t\t\tconsole.log(etherValue);\n\n\t\t\to.etherValue = etherValue;\n\n\t\t\to.usdValue = o.PriceDetails.PriceUSCents / 100;\n\n\t\t\tsetOrder(o);\n\n\t\t} catch (e) {\n\t\t\tconsole.log(\"Error occurred when attempting to go to checkout.\", e);\n\t\t\talert(\"It looks like that NFT isn't yet supported by OTC; we're working on it, but in the meantime try another one.\")\n\t\t}\n\t\tsetLoadingPreview(false);\n\t};\n\n\tlet handleClear = (e) => {\n\t\te.preventDefault();\n\t\tsetOrder(null);\n\t};\n\n\treturn (\n\t\t<>\n\n\t\t\t<hr style={{backgroundImage: \"linear-gradient(to right, #5f3be3, #e33b3b)\", height:\"1px\", marginTop:\"0px\"}} />\n\t\t\t\t<h1 class=\"display-5\">NFT the Web</h1> \n\t\t\t<hr style={{backgroundImage: \"linear-gradient(to right, #5f3be3, #e33b3b)\", height:\"1px\"}} />\n\t\t\t<Row>\n\t\t\t\t<Col className=\"col-md-4 col-12\" style={{marginTop:\"15px\"}}>\n\t\t\t\t\t<Card style={{minHeight: \"100%\", boxShadow: \"1px 1px 4px #5f3be3\", marginTop:\"15px\"}}>\n                        <Card.Body>\n                            <Card.Title>Step 1</Card.Title>\n                            <Card.Text>\n\t\t\t\t\t\t\t\t<a href=\"https://bing.com\" target=\"_blank\" rel=\"noreferrer\">Find some content</a> you love or want to sell or control.\n                            </Card.Text>\n                        </Card.Body>\n\t\t\t\t\t</Card>\n\t\t\t\t</Col>\n\t\t\t\t<Col className=\"col-md-4 col-12\" style={{marginTop:\"15px\"}}>\n\t\t\t\t\t<Card style={{minHeight: \"100%\", boxShadow: \"1px 1px 4px #5f3be3\", marginTop:\"15px\"}}>\n                        <Card.Body>\n                            <Card.Title>Step 2</Card.Title>\n                            <Card.Text>\n\t\t\t\t\t\t\t\tPaste the details into the form below.\n                            </Card.Text>\n                        </Card.Body>\n\t\t\t\t\t</Card>\n\t\t\t\t</Col>\n\t\t\t\t<Col className=\"col-md-4 col-12\" style={{marginTop:\"15px\"}}>\n\t\t\t\t\t<Card style={{minHeight: \"100%\", boxShadow: \"1px 1px 4px #5f3be3\", marginTop:\"15px\"}}>\n                        <Card.Body>\n                            <Card.Title>Step 3</Card.Title>\n                            <Card.Text>\n\t\t\t\t\t\t\t\tInform the content creator you now own their workproduct. <span style={{opacity:\"50%\"}}>See our FAQs for a handy form letter</span>\n                            </Card.Text>\n                        </Card.Body>\n\t\t\t\t\t</Card>\n\t\t\t\t</Col>\n\t\t\t</Row>  \n\n\t\t\t<Row style={{marginTop:\"20px\"}}>\n\t\t\t\t<Col md={{ span: 10, offset: 1    }}>\n\t\t\t\t\t<hr style={{backgroundImage: \"linear-gradient(to right, #5f3be3, #e33b3b)\", height:\"1px\", marginBottom:\"15px\", marginTop:\"35px\"}}/>\n\t\t\t\t\t<Form>\n\t\t\t\t\t\t{ !order ? <NFTMeta meta={nftMeta} editable={!isCheckingOut} changes={(v) => setNFTMeta(v)}></NFTMeta> : <NFTMeta meta={order.NFTMeta} editable={false} changes={(v) => setNFTMeta(v)}></NFTMeta> }\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t!isCheckingOut ? \n\t\t\t\t\t\t\t<Button variant=\"primary\" onClick={previewCustom} disabled={!checkoutReady || loadingPreview}>\n\t\t\t\t\t\t\t\t{ loadingPreview ? <Spinner\n\t\t\t\t\t\t\t\t\tas=\"span\"\n\t\t\t\t\t\t\t\t\tanimation=\"grow\"\n\t\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\t\trole=\"status\"\n\t\t\t\t\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\t\t\t\t/> : \"Preview\" }\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t: \t\t\t\t\n\t\t\t\t\t\t\t<Button variant=\"default\" onClick={handleClear}>\n\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t}\n\t\t\t\t\t</Form>\n\n\t\t\t\t\t{ order ? \n\t\t\t\t\t\t<Checkout order={order} nftMeta={nftMeta} handleDone={() => setNFTMeta(zeroNFTMeta())} clearOrder={() => setOrder(null)}></Checkout>\n\t\t\t\t\t\t: null\n\t\t\t\t\t}\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</>\n\t);\n}\n\n\nexport default Custom;\n\n\n// {\n// \t\"OrderID\": \"50bc8957-216d-4974-9f62-e7646e412071\",\n// \t\"NFTID\": \"293285d3-8467-40c8-a8cf-d0e3b614c676\",\n// \t\"Hash\": \"ec4955ca-b045-4d8b-8da1-56787ea0a74b\",\n// \t\"SubtotalInWei\": 100000000000000000,\n// \t\"EstimatedGasCost\": 300000000000000,\n// \t\"TotalPriceInWei\": 100300000000000000\n//   }","import React, { Component, useState, useEffect } from 'react';\nimport { Row, Col, Card, Button, Form } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport config from '../../services/config.js';\nimport { ethers } from \"ethers\";\nimport moment from \"moment\";\n\nconst abi = [\n\t// \"setIntervalDetails(uint256 _intervalStartUnixSeconds, uint256 _intervalLengthSeconds)\",\n\t\"function ownerOf(uint256 tokenId) view returns (address)\",\n\t\"function owner() public view returns (address)\",\n\t\"function basePriceUSD() public view returns (uint64)\",\n\t\"function priceModifierHashCount() public view returns (int64)\",\n\t\"function priceModifierTotalMintedCount() public view returns (int64)\",\n\t\"function priceModifierIntervalCount() public view returns (int64)\",\n\t\"function intervalLengthSeconds() public view returns (uint64)\",\n\t\"function intervalStartUnixSeconds() public view returns (uint64)\",\n\t\"function takeOwnership(uint64 _seriesSupply) public\",\n\t\"function purchase(uint256 _order, uint256 gasMoney) external payable\"\n]\n\n\nfunction TakeOwnership(props) {\n\tlet [ provider, setProvider ] = useState(null);\n\tlet [ readProvider, setReadProvider ] = useState(null);\n\tlet [ walletConnected, setIsWalletConnected ] = useState(false);\n\tlet [ priceParams, setPriceParams ] = useState({});\n\tlet [ isKeyTokenOwner, setIsKeyTokenOwner ] = useState(false);\n\tlet [ contractClient, setContractClient ] = useState(null);\n\n\n\tuseEffect(() => {\n\t\tif (window.ethereum) {\n\t\t\tconst provider = new ethers.providers.Web3Provider(window.ethereum);\n\t\t\tsetProvider(provider);\n\t\t}\n\n\t\tconst reader = new ethers.providers.EtherscanProvider(config.env, config.etherscanAPIKey);\n        setReadProvider(reader);\n\t}, []);\n\n\tuseEffect(() => {\n        let f = async () => {\n            if (!readProvider) { return ;}\n            try {\n                let readContract = new ethers.Contract(config.contractAddr, abi, readProvider);\n                \n\t\t\t\tlet basePrice = await readContract.basePriceUSD();\n\t\t\t\tlet hashCountModifier = await readContract.priceModifierHashCount();\n\t\t\t\tlet totalCountModifier = await readContract.priceModifierTotalMintedCount();\n\t\t\t\tlet intervalCountModifier = await readContract.priceModifierIntervalCount();\n\t\t\t\tlet intervalStartUnixSeconds = await readContract.intervalStartUnixSeconds();\n\t\t\t\tlet intervalLengthSeconds = await readContract.intervalLengthSeconds();\n\n\t\t\t\tlet intervalStartDate = moment.unix(intervalStartUnixSeconds);\n\t\t\t\tlet intervalDuration = moment.duration(intervalLengthSeconds, \"seconds\").humanize(false); \n\n\t\t\t\tsetPriceParams({\n\t\t\t\t\tbasePrice: basePrice.toNumber(),\n\t\t\t\t\thashCountMutliplier: hashCountModifier.toNumber(),\n\t\t\t\t\ttotalCountMultiplier: totalCountModifier.toNumber(),\n\t\t\t\t\ttimeMultiplier: intervalCountModifier.toNumber(),\n\t\t\t\t\tintervalStartDate: intervalStartDate,\n\t\t\t\t\tintervalDuration: intervalDuration\n\t\t\t\t});\n            } catch (e) {\n                console.log(\"error trying to get base usd price\", e)\n            }\n        };\n        f();\n    }, [readProvider]);\n\n\tuseEffect(() => {\n\t\tlet f = async () => {\n\t\t\ttry{\n\t\t\tif (!provider) { return; }\n\t\t\tlet accounts = await provider.listAccounts();\n\t\t\tsetIsWalletConnected(accounts > 0);\n\n\t\t\tlet contract = new ethers.Contract(config.contractAddr, abi, provider);\n\t\t\tsetContractClient(contract);\n\n\t\t\t// let nftContract = new ethers.Contract(config.nftAddr, abi, provider);\n\n\t\t\tlet ownerOfKey = await contract.ownerOf(config.keyToken);\n\n\t\t\tfor (let account of accounts) {\n\t\t\t\tif (account === ownerOfKey) {\n\t\t\t\t\tsetIsKeyTokenOwner(true);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.log(\"Error checking who is owner\", e);\n\t\t}\n\t\t};\n\t\tf();\n\t}, [provider]);\n\n\tlet handleConnectWallet = async (e) => {\n\t\ttry {\n\t\t\tawait window.ethereum.request({ method: 'eth_requestAccounts' });\n\t\t\tsetIsWalletConnected(true);\n\t\t} catch (e) {\n\t\t\tconsole.log(\"Error requesting accounts\", e);\n\t\t}\n\t};\n\n\tlet handleTakeOwnership = async (e) => {\n\t\tif (!isKeyTokenOwner) {\n\t\t\talert(\"You are not the key token holder, but you can still try\");\n\t\t} \n\n\t\tlet signer = provider.getSigner();\n\t\tlet contractWithSigner = contractClient.connect(signer);\n\n\t\ttry {\n\t\t\tawait contractWithSigner.takeOwnership(100);\n\t\t}\n\t\tcatch (e) {\n\t\t\talert(\"Error occurred trying to take ownership\");\n\t\t\tconsole.log(e);\n\t\t}\n\t}\n\n\n\treturn (\n        <>\n            <hr style={{backgroundImage: \"linear-gradient(to right, #5f3be3, #e33b3b)\", height:\"1px\", marginTop:\"0px\"}} />\n                <h1 class=\"display-5\">Own this Marketplace</h1>\n            <hr style={{backgroundImage: \"linear-gradient(to right, #5f3be3, #e33b3b)\", height:\"1px\"}} />\n\n\t\t\t<Row>\n\t\t\t\t<Col className=\"col-md-4 col-12\" style={{marginTop:\"15px\"}}>\n\t\t\t\t\t<Card style={{minHeight: \"100%\", boxShadow: \"1px 1px 4px #5f3be3\", marginTop:\"15px\"}}>\n                        <Card.Body>\n                            <Card.Title>Step 1</Card.Title>\n                            <Card.Text>\n\t\t\t\t\t\t\t\t{/* TODO: this needs to be more dynamic based on the configs */}\n\t\t\t\t\t\t\t\t<a href={`https://testnets.opensea.io/assets/0x944bce254c9ac0c6b17a0206b889e1e4129752d9/${config.keyToken}`} target=\"_blank\" rel=\"noreferrer\">Buy the Key NFT that indicates who owns overthecounter.icu.</a>\n                            </Card.Text>\n                        </Card.Body>\n\t\t\t\t\t</Card>\n\t\t\t\t</Col>\n\t\t\t\t<Col className=\"col-md-4 col-12\" style={{marginTop:\"15px\"}}>\n\t\t\t\t\t<Card style={{minHeight: \"100%\", boxShadow: \"1px 1px 4px #5f3be3\", marginTop:\"15px\"}}>\n                        <Card.Body>\n                            <Card.Title>Step 2</Card.Title>\n                            <Card.Text>\n\t\t\t\t\t\t\t\tClick the take ownership button below. <span style={{opacity:\"50%\"}}>(The profits held by the contract will be released to the current owner).</span>\n                            </Card.Text>\n                        </Card.Body>\n\t\t\t\t\t</Card>\n\t\t\t\t</Col>\n\t\t\t\t<Col className=\"col-md-4 col-12\" style={{marginTop:\"15px\"}}>\n\t\t\t\t\t<Card style={{minHeight: \"100%\", boxShadow: \"1px 1px 4px #5f3be3\", marginTop:\"15px\"}}>\n                        <Card.Body>\n                            <Card.Title>Step 3</Card.Title>\n                            <Card.Text>\n\t\t\t\t\t\t\t\tProfit. <span style={{opacity:\"50%\"}}>(Literally. You will get the profits that this marketplace generates. Go read the smart contract if you must).</span>\n                            </Card.Text>\n                        </Card.Body>\n\t\t\t\t\t</Card>\n\t\t\t\t</Col>\n\t\t\t</Row>  \n\t\t\t<hr style={{backgroundImage: \"linear-gradient(to right, #5f3be3, #e33b3b)\", height:\"1px\", marginBottom:\"15px\", marginTop:\"35px\"}}/>\n            <Row style={{marginTop:\"25px\"}}>\n                <Col style={{marginLeft:\"5px\"}} md={{offset:1}}>\n\t\t\t\t\t<Form>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Button disabled={walletConnected} className=\"btn-primary btn-lg\" onClick={handleConnectWallet}>\n\t\t\t\t\t\t\t\t1. Connect Wallet\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row style={{marginTop:\"3px\"}}>\n\t\t\t\t\t\t\t<Button className=\"btn-lg btn-danger\" onClick={handleTakeOwnership}>\n\t\t\t\t\t\t\t\t2. Take Ownership\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Form>\n                </Col>\n            </Row>  \n\n\t\t\t<hr style={{backgroundImage: \"linear-gradient(to right, #5f3be3, #e33b3b)\", height:\"1px\", marginBottom:\"15px\", marginTop:\"35px\"}}/>\n\n\t\t\t{ priceParams.basePrice && <Form>\n\t\t\t\t<h3 class=\"display-5\">Only the owner can edit these values</h3>\n\t\t\t\t<Form.Group controlId=\"totalPrice\">\n\t\t\t\t\t<Form.Label><h5>Base Price USD</h5></Form.Label>\n\t\t\t\t\t<Form.Control readOnly={true} type=\"text\" value={`${priceParams.basePrice} dollars base price`} />\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group controlId=\"hashCountMultiplier\">\n\t\t\t\t\t<Form.Label><h5>Price bump for each similar NFTs that has been minted on OTC</h5></Form.Label>\n\t\t\t\t\t<Form.Control readOnly={true} type=\"text\" value={`${priceParams.hashCountMutliplier/100} additional dollar(s) for each matching NFT minted`} />\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group controlId=\"totalNFTSMultiplier\">\n\t\t\t\t\t<Form.Label><h5>Price bump for each NFT that has been minted on OTC</h5></Form.Label>\n\t\t\t\t\t<Form.Control readOnly={true} type=\"text\" value={`${priceParams.totalCountMultiplier/100} additional dollar(s) for each NFT minted`} />\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group controlId=\"totalPrice\">\n\t\t\t\t\t<Form.Label><h5>Price bump for how much time has passed using the parameters below</h5></Form.Label>\n\t\t\t\t\t<Form.Control readOnly={true} type=\"text\" value={`${priceParams.timeMultiplier / 100} additonial dollar(s) for each interval`} />\n\t\t\t\t</Form.Group>\n\t\t\t\t\n\t\t\t\t{ priceParams.intervalStartDate && <Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Form.Group controlId=\"intervalStartTime\">\n\t\t\t\t\t\t\t<Form.Label><h5>Start date for calculating time-based price bump</h5></Form.Label>\n\t\t\t\t\t\t\t<Form.Control readOnly={true} type=\"date\" value={`${priceParams.intervalStartDate.format(\"YYYY-MM-DD\")}`} />\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Form.Group controlId=\"intervalLength\">\n\t\t\t\t\t\t\t<Form.Label><h5>Duration of each price bump interval</h5></Form.Label>\n\t\t\t\t\t\t\t<Form.Control readOnly={true} type=\"text\" value={`${priceParams.intervalDuration}`} />\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row> }\n\t\t\t</Form> }\n        </>\n\t);\n}\n\n\nexport default TakeOwnership;\n","import React, { Component, useState } from 'react';\nimport { Row, Col, Card, Figure } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport config from '../../services/config.js';\n\n\nfunction FAQ(props) {\n\n\treturn (\n        <>\n            <hr style={{backgroundImage: \"linear-gradient(to right, #5f3be3, #e33b3b)\", height:\"1px\", marginTop:\"0px\"}} />\n                <h1 class=\"display-5\">Frequently Asked Questions</h1>\n            <hr style={{backgroundImage: \"linear-gradient(to right, #5f3be3, #e33b3b)\", height:\"1px\"}} />\n            <Row style={{marginTop:\"5px\"}}>\n                <Col md={{ span: 8, offset: 2    }}>\n\n                    <Card style={{boxShadow: \"1px 1px 4px #5f3be3\", marginTop:\"20px\"}}>\n                        <Card.Body>\n                            <Card.Title>What is an NFT and why would I buy one?</Card.Title>\n                            <Card.Text>\n                                <p>According to this <a href=\"https://pitchfork.com/thepitch/why-do-nfts-matter-for-music/?utm_medium=social&utm_social-type=owned&mbid=social_twitter&utm_brand=p4k&utm_source=twitter\" target=\"_blank\" rel=\"noreferrer\">fantastic article from Pitchfork</a>, \n                                NFTs are a way for rich people to buy feelings. At OTC we believe even poor people should be able to buy offbrand feelings.</p>\n                                <p>Well, if buying feelings isn't reason enough, it's also popular to try to flip them for more money.</p> \n                                <p>Some NFTs offer special priveleges to their owners; such as Crypto Kitties which lets you breed your digital cats, \n                                or <Link to=\"/own\">Over the Counter's key token</Link> which let's you own and operate this marketplace.</p>\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n\n                    <Card style={{boxShadow: \"1px 1px 4px #5f3be3\", marginTop:\"20px\"}}>\n                        <Card.Body>\n                            <Card.Title>Is this a scam?</Card.Title>\n                            <Card.Text>\n                                <p>Oh you sweet Summer child, if you think the idea of paying real money to be able to say you own an image file that is hosted somewhere else on the web sounds appealing then this is no more of a scam than 99% of all NFTs that exists right now.</p>\n                                <p>Also, you really can purchase <Link to=\"/own\">the key NFT for OverTheCounter.icu</Link> to become the owner of this marketplace and receive the profits that it generates.</p>\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n\n                    <Card style={{boxShadow: \"1px 1px 4px #5f3be3\", marginTop:\"20px\"}}>\n                        <Card.Body>\n                            <Card.Title>How does this benefit the content creator of a certain digital asset that gets tokenized?</Card.Title>\n                            <Card.Text>\n                                It doesn't.\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n\n                    <Card style={{boxShadow: \"1px 1px 4px #5f3be3\", marginTop:\"20px\"}}>\n                        <Card.Body>\n                            <Card.Title>I just bought an NFT from Over the Counter, how should I inform the content creator that I am the new owner?</Card.Title>\n                            <Card.Text>\n                                <p>Letting a content creator know that you now own their digital workproduct is extremely exciting for both you and them. Please feel free to use the following form letter when crafting your notification.</p>\n\n                                <div style={{backgroundImage: \"linear-gradient(to right, #5f3be3, #e33b3b)\", color:\"white\", padding:\"10px\", borderRadius:\"6px\"}}>\n                                    <p style={{fontFamily: \"'Rock Salt', cursive\"}}> Dear Sir or Madam, </p>\n                                    <p>I am thrilled to inform you that <strong>[reddit.com/r/nft]</strong> has recently changed ownership! This is such an exciting time for us to be working together and I could not be more <i>amped</i> for what the future holds. </p>\n                                    <p>I want to let you know that you have done great work so far, but there are a few tweaks I think we should make going forward. Here are a list of changes I would like enacted immediately:</p>\n                                    <ul>\n                                        <li>\n                                            Please create a pinned post about OverTheCounter.icu.\n                                        </li>\n                                        <li>\n                                            Rule 2 about \"content theft\" makes no sense; because an NFT is not content but just proof of ownership, it's clearly impossible to steal one; please remove this rule.\n                                        </li>\n                                        <li>\n                                            Etc...\n                                        </li>\n                                    </ul>\n                                    <p>Thank you, let me know if you have any questions!</p>\n                                    <p style={{fontFamily: \"'Rock Salt', cursive\"}}>0xF8852ec8f7c04DDe72d418b09abf3F2EAF4f8828</p>\n                                </div>\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                    \n                    <Card style={{boxShadow: \"1px 1px 4px #5f3be3\", marginTop:\"20px\"}}>\n                        <Card.Body>\n                            <Card.Title>What should I do if the content creator refuses to recognize my ownership?</Card.Title>\n                            <Card.Text>\n                                <p>NFTs are a new technology and therefore the courts have yet to weigh in on exactly how this situation would play out judicially. </p>\n                                <p>However, it’s safe to say that it will absolutely and without a doubt be ruled in favor of the <strong>NFT owner</strong> (you) if there is any dispute about ownership with a content creator.</p>\n                                <p>After all, you have the indisputable power of blockchain proving that you do in fact own the NFT. So, feel free to have your lawyer contact their lawyer if this situation arises. </p>\n\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n\n                    <Card style={{boxShadow: \"1px 1px 4px #5f3be3\", marginTop:\"20px\"}}>\n                        <Card.Body>\n                            <Card.Title>No seriously, what is this?</Card.Title>\n                            <Card.Text>\n                                <p>NFTs are an interesting idea that probably has a handful of legitimate use-cases.</p>\n                                <p>However, just like the ICO craze of 2017, it seems the crypto world cannot resist the temptation to take an intriguing concept and milk it for all its worth with get-rich-quick schemes.</p>\n                                <p style={{fontSize:\"25px\"}}>OverTheCounter.icu is an interactive art-piece, ownable as an NFT, that's poking fun at this NFT bubble while itself being a get-rich-quick scheme.</p>\n                                <p>If you're purchasing an NFT to own some art from a marketplace such as OpenSea, then the rational choice would be to create an Over the Counter bootleg of that same NFT here.</p>\n                                <p>If the NFT your purchasing needs to be a \"real\" one for you to interact with it on some platform such as Crypto Kitties, well then now we've come to the centralized/decentralized paradox. \n                                    If the <i>true</i> value of owning an NFT comes from a central party (such as Crypto Kitties), then why have we decentralized the ownership when it could have been done in a way that was cheaper, easier, \n                                    and better for the environment by the central party in the first place.</p>\n                                <p>An NFT is probably only worth owning if the owner gets to do something unique while they own it. Just like the real world, the vast majority of NFTs from OverTheCounter.icu have no special priveleges for their owners; \n                                    however, the owner of the Key token does get the right to take ownership of this marketplace, including the power to change the pricing model and to collect all of the profits</p>\n                                <p>In conclusion, please enjoy the quote below about NFTs and ask yourself, if Rinkeby Legends (whatever that is) shut down tomorrow (seems likely), would you even still <i>want</i> your Rinkeby Legends cards?</p>\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                    \n                    <Figure style={{boxShadow: \"1px 1px 4px #5f3be3\", marginTop:\"20px\"}}>\n                        <a href=\"https://medium.com/nifty-gateway/the-nifty-gateway-blockchain-wallet-explainer-d4c7156f480a\" target=\"_blank\" rel=\"noreferrer\">\n                            <Figure.Image\n                                src=\"tomorrow.png\"\n                            />\n                        </a>\n                    </Figure>\n\n                </Col>\n            </Row>  \n        </>\n\t);\n}\n\n\nexport default FAQ;\n","import React, { Component } from 'react';\n// import Radium from 'radium';\nimport { Container, Row } from 'react-bootstrap';\nimport { Route, Switch } from 'react-router-dom';\nimport NavBar from './components/nav/NavBar.js';\nimport Home from './components/pages/Home.js';\nimport Counterfeit from './components/pages/Counterfeit.js';\nimport Custom from './components/pages/Custom.js';\nimport TakeOwnership from './components/pages/TakeOwnership.js';\nimport FAQ from './components/pages/FAQ.js';\n\nimport './App.css';\nimport config from './services/config';\n\nclass App extends Component {\n  render() {\n\n    return (\n      <div style={{fontFamily: \"'Raleway', sans-serif\"}}>\n          <NavBar></NavBar>\n\n          <Container style={{marginBottom:\"75px\"}}>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/counterfeit\" component={Counterfeit} />\n              <Route exact path=\"/custom\" component={Custom} />\n              <Route exact path=\"/own\" component={TakeOwnership} />\n              <Route exact path=\"/faq\" component={FAQ} />\n              {/* <Route path=\"/settings/:userId\" component={Settings} /> */}\n            </Switch>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter as Router } from \"react-router-dom\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n        <App/>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}