{"version":3,"sources":["services/config.js","components/nav/NavBar.js","components/pages/Home.js","components/ui/nftmeta.js","components/pages/Counterfeit.js","components/pages/Custom.js","components/pages/TakeOwnership.js","App.js","index.js"],"names":["config","apiHost","env","ethAPIProvider","NavBar","style","backgroundImage","boxShadow","marginBottom","color","position","opacity","Container","Row","paddingTop","Col","className","fontFamily","bottom","Navbar","sticky","marginBotom","Nav","defaultActiveKey","Link","as","eventKey","to","Home","props","Jumbotron","class","height","Figure","Image","src","Caption","marginTop","target","rel","href","NFTMeta","displayElement","handleChange","animationURL","imageURL","u","fileExt","split","pop","toLowerCase","isModel","max-width","auto-rotate","autoplay","camera-controls","ar-status","isVideo","muted","autoPlay","controlsList","loop","preload","alt","initialValues","meta","validate","values","changes","animation_url","image","Form","Group","controlId","NFTID","Label","Control","onChange","name","disabled","editable","type","placeholder","value","description","attributes","insert","remove","push","map","val","idx","formattedVal","inputType","max_value","display_type","moment","unix","format","origin","trait_type","onClick","Text","external_url","youtube_url","Counterfeit","useState","counterfeitContractAddr","setCounterfeitContractAddr","counterfeitTokenId","setCounterfeitTokenId","includeRugPull","setIncludeRugPull","add","rugPullDate","setRugPullDate","rugPullTime","setRugPullTime","checkoutReady","setIsCheckoutReady","isCheckingOut","setIsCheckingOut","walletConnected","setIsWalletConnected","order","setOrder","provider","setProvider","rugPullMeta","setRugPullMeta","useEffect","hasTokenDetails","window","ethereum","ethers","providers","Web3Provider","a","listAccounts","f","previewCounterfeit","e","preventDefault","console","log","rugPullDateTime","axios","post","resp","o","data","etherValue","utils","formatEther","TotalPriceInWei","usdValue","PriceDetails","PriceUSCents","alert","handleConnectWallet","request","method","handleCheckout","signer","getSigner","sendTransaction","OTCMarketContractAddr","BigNumber","from","trxn","OrderID","hash","parts","length","details","parseAndSetCounterfeitAddr","Check","checked","label","Button","variant","v","multiline","LineItems","li","data-tip","marginLeft","readOnly","Custom","nftMeta","setNFTMeta","previewCustom","TakeOwnership","App","exact","path","component","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2UAOeA,EAPA,CAEXC,QAAS,oCACTC,IAAK,UACLC,eAAgB,yE,OCyBLC,MAxBf,WACI,OACI,sBAAKC,MAAO,CAACC,gBAAiB,8CAA+CC,UAAW,sBAAuBC,aAAa,OAAQC,MAAM,SAA1I,UACMT,EAAOE,IAAM,sBAAMG,MAAO,CAACK,SAAS,WAAYC,QAAQ,OAA3C,SAAoDX,EAAOE,MAAc,KACxF,eAACU,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKR,MAAO,CAACS,WAAW,QAAxB,SACI,eAACC,EAAA,EAAD,CAAKC,UAAU,YAAf,UACI,oBAAIX,MAAO,CAACY,WAAY,wBAAxB,8BACA,oBAAIZ,MAAO,CAACY,WAAY,wBAAyBC,OAAO,OAAxD,sCAGR,cAACC,EAAA,EAAD,CAAQC,OAAO,MAAMJ,UAAU,cAAcX,MAAO,CAACgB,YAAY,QAAjE,SACI,eAACC,EAAA,EAAD,CAAKC,iBAAiB,OAAtB,UACI,cAACD,EAAA,EAAIE,KAAL,CAAUC,GAAID,IAAME,SAAS,OAAOC,GAAE,IAAtC,kBACA,cAACL,EAAA,EAAIE,KAAL,CAAUC,GAAID,IAAME,SAAS,cAAcC,GAAE,eAA7C,yBACA,cAACL,EAAA,EAAIE,KAAL,CAAUC,GAAID,IAAME,SAAS,SAASC,GAAE,UAAxC,yBACA,cAACL,EAAA,EAAIE,KAAL,CAAUC,GAAID,IAAME,SAAS,MAAMC,GAAE,OAArC,yC,mCCuITC,MArJf,SAAcC,GAEb,OACC,gCACC,eAACC,EAAA,EAAD,CAAWd,UAAU,GAArB,UACC,oBAAIe,MAAM,YAAV,qDACA,mBAAGA,MAAM,OAAT,yJACA,mBAAGA,MAAM,OAAT,wMACA,oBAAI1B,MAAO,CAACC,gBAAiB,8CAA+C0B,OAAO,SACnF,2EAA6C,cAAC,IAAD,CAAML,GAAG,cAAT,6BAA7C,yGACA,oBAAGI,MAAM,OAAT,UACC,cAAC,IAAD,CAAMJ,GAAG,OAAOI,MAAM,yBAAtB,wBACA,cAAC,IAAD,CAAMJ,GAAG,MAAMI,MAAM,yBAArB,wCAIF,oBAAI1B,MAAO,CAACC,gBAAiB,8CAA+C0B,OAAO,UAEnF,eAACF,EAAA,EAAD,CAAWd,UAAU,GAArB,UACC,eAACH,EAAA,EAAD,WACC,cAACE,EAAA,EAAD,CAAKC,UAAU,kBAAf,SACC,eAACiB,EAAA,EAAD,WACC,cAACA,EAAA,EAAOC,MAAR,CACCF,OAAQ,IACRG,IAAI,mKACJ9B,MAAO,CAACE,UAAW,yBAEpB,cAAC0B,EAAA,EAAOG,QAAR,iDAKF,eAACrB,EAAA,EAAD,CAAKC,UAAU,kBAAf,UACC,oBAAIX,MAAO,CAACC,gBAAiB,8CAA+C0B,OAAO,MAAOK,UAAU,SACpG,oBAAIN,MAAM,YAAV,sBACA,oBAAI1B,MAAO,CAACC,gBAAiB,8CAA+C0B,OAAO,SACnF,sBAAKhB,UAAU,OAAf,UACC,kMAGA,2DAC2B,mBAAGsB,OAAO,SAASC,IAAI,aAAaC,KAAK,+GAAzC,qCAD3B,8NAOH,cAAC3B,EAAA,EAAD,UACC,cAACE,EAAA,EAAD,UACC,cAAC,IAAD,CAAMY,GAAG,cAAcI,MAAM,oCAA7B,mDAMH,oBAAI1B,MAAO,CAACC,gBAAiB,8CAA+C0B,OAAO,UAEnF,eAACF,EAAA,EAAD,CAAWd,UAAU,GAArB,UACC,eAACH,EAAA,EAAD,WACC,eAACE,EAAA,EAAD,CAAKC,UAAU,kBAAf,UACC,oBAAIX,MAAO,CAACC,gBAAiB,8CAA+C0B,OAAO,MAAOK,UAAU,SACpG,oBAAIN,MAAM,YAAV,yBACA,oBAAI1B,MAAO,CAACC,gBAAiB,8CAA+C0B,OAAO,SACnF,sBAAKhB,UAAU,OAAf,UACC,gTAEqE,cAAC,IAAD,CAAMW,GAAG,SAAT,yBAFrE,uBAIA,8ZAQF,eAACZ,EAAA,EAAD,CAAKC,UAAU,kBAAf,UACC,cAACH,EAAA,EAAD,UACC,cAACE,EAAA,EAAD,UACC,eAACkB,EAAA,EAAD,WACC,cAACA,EAAA,EAAOC,MAAR,CACCF,OAAQ,IACRG,IAAI,mKACJ9B,MAAO,CAACE,UAAW,yBAEpB,cAAC0B,EAAA,EAAOG,QAAR,gEAMH,cAACvB,EAAA,EAAD,UACC,cAACE,EAAA,EAAD,UACC,gMAOJ,cAACF,EAAA,EAAD,UACC,cAACE,EAAA,EAAD,UACC,cAAC,IAAD,CAAMY,GAAG,cAAcI,MAAM,oCAA7B,8CAMH,oBAAI1B,MAAO,CAACC,gBAAiB,8CAA+C0B,OAAO,UAEnF,cAACF,EAAA,EAAD,CAAWd,UAAU,GAArB,SACC,cAACH,EAAA,EAAD,UACC,eAACE,EAAA,EAAD,CAAKC,UAAU,mBAAf,UACC,oBAAIX,MAAO,CAACC,gBAAiB,8CAA+C0B,OAAO,MAAOK,UAAU,SACpG,oBAAIN,MAAM,YAAV,0BACA,oBAAI1B,MAAO,CAACC,gBAAiB,8CAA+C0B,OAAO,SACnF,cAACnB,EAAA,EAAD,UACC,cAACE,EAAA,EAAD,UACC,mBAAGuB,OAAO,SAASC,IAAI,aAAaC,KAAK,wJAAzC,SACC,eAACP,EAAA,EAAD,WACC,cAACA,EAAA,EAAOC,MAAR,CACCF,OAAQ,IACRG,IAAI,kBACJ9B,MAAO,CAACE,UAAW,yBAEpB,cAAC0B,EAAA,EAAOG,QAAR,uGAOJ,sBAAKpB,UAAU,OAAf,UACC,yMAGA,wS,4FCPQyB,MAlIf,SAAiBZ,GACb,IAkBIa,EAAiB,SAACC,EAAcC,EAAcC,GAC9C,GAAID,EAAc,CACd,GApBM,SAACE,GACX,IAAIC,EAAUD,EAAEE,MAAM,KAAKC,MAC3B,QAAKF,GAI4B,QAA1BA,EAAQG,cAcPC,CAAQP,GACR,OAAO,8BAAcQ,YAAU,QAAQC,cAAY,OAAOC,SAAS,OAAOC,kBAAgB,OAAOpB,IAAKS,EAAcY,YAAU,mBAElI,GAdM,SAACV,GACX,IAAIC,EAAUD,EAAEE,MAAM,KAAKC,MAC3B,QAAKF,IAI4B,QAA1BA,EAAQG,eAAqD,QAA1BH,EAAQG,eAAqD,SAA1BH,EAAQG,eAAsD,QAA1BH,EAAQG,eAQjHO,CAAQb,GACR,OAAO,uBAAOZ,OAAO,QAAQoB,YAAU,QAAQM,OAAO,EAAMC,UAAU,EAAMC,aAAa,aAAaC,MAAM,EAAMC,QAAQ,OAAO3B,IAAKS,IAI9I,OAAO,qBAAKZ,OAAO,QAAQoB,YAAU,QAAQjB,IAAKU,EAAUkB,IAAI,gCAGvE,OACC,cAAC,IAAD,CACUC,cAAenC,EAAMoC,KACrBC,SAAU,SAAAC,GAEN,MADe,IAH7B,SAOO,gBACAA,EADA,EACAA,OACAxB,EAFA,EAEAA,aAFA,OAIE,qCACGd,EAAMuC,SAAWvC,EAAMuC,QAAQD,GAC7B,eAACtD,EAAA,EAAD,WACI,cAACE,EAAA,EAAD,CAAKC,UAAU,WAAf,SACK0B,EAAeC,EAAcwB,EAAOE,cAAeF,EAAOG,SAE/D,eAACvD,EAAA,EAAD,CAAKC,UAAU,WAAf,UACI,eAACuD,EAAA,EAAKC,MAAN,CAAYC,UAAW,eAAeN,EAAOO,MAA7C,UACI,cAACH,EAAA,EAAKI,MAAN,mBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,SAAUlC,EAAcmC,KAAK,OAAOC,UAAWlD,EAAMmD,SAAUC,KAAK,OAAOC,YAAY,oBAAoBC,MAAOhB,EAAOW,UAE3I,eAACP,EAAA,EAAKC,MAAN,CAAYC,UAAW,eAAeN,EAAOO,MAA7C,UACI,cAACH,EAAA,EAAKI,MAAN,0BACA,cAACJ,EAAA,EAAKK,QAAN,CAAcnD,GAAG,WAAWsD,UAAWlD,EAAMmD,SAAUH,SAAUlC,EAAcmC,KAAK,cAAczE,MAAO,CAAC2B,OAAO,QAASkD,YAAY,yDAAyDC,MAAOhB,EAAOiB,uBAIzN,4CACA,cAACvE,EAAA,EAAD,YACQsD,EAAOkB,YAAc,cAAC,IAAD,CAAYP,KAAK,aAAjB,SACxB,cAAGQ,OAAH,IAAWC,EAAX,EAAWA,OAAX,EAAmBC,KAAnB,OACGrB,EAAOkB,WAAWI,KAAI,SAACC,EAAKC,GACxBD,EAAIE,aAAeF,EAAIP,MAEL,WAAdO,EAAIP,MACJO,EAAIG,UAAY,SAEhBH,EAAIG,UAAY,OAGhBH,EAAII,YACJJ,EAAIE,aAAJ,UAAsBF,EAAIP,MAA1B,eAAsCO,EAAII,YAGrB,SAArBJ,EAAIK,eACJL,EAAIG,UAAY,OAChBH,EAAIE,aAAeI,IAAOC,KAAKP,EAAIP,OAAOe,OAAO,eAGrD,IAAInB,GAAYlD,EAAMmD,UAA2B,QAAfU,EAAIS,UAAsBT,EAAII,UAEhE,OAAO,cAAC/E,EAAA,EAAD,CAAeC,UAAU,QAAzB,SAEC,eAACuD,EAAA,EAAKC,MAAN,CAAYC,UAAW,UAAUkB,EAAjC,YACQD,EAAIU,YAAc,cAAC7B,EAAA,EAAKI,MAAN,oBAAgBe,EAAIU,cAD9C,IAC6ErB,EAAwD,KAA7C,cAAC,IAAD,CAAOsB,QAAS,kBAAKd,EAAOI,MAChH,cAACpB,EAAA,EAAKK,QAAN,CAAcC,SAAUlC,EAAcmC,KAAI,qBAAgBa,EAAhB,UAA6BZ,SAAUA,EAAUE,KAAMS,EAAIG,UAAWV,MAAOO,EAAIE,eAC1HF,EAAIK,aAAe,cAACxB,EAAA,EAAK+B,KAAN,CAAWtF,UAAU,aAArB,SACf0E,EAAIK,eACM,SAPVJ,WAe7B,cAAC9E,EAAA,EAAD,UACI,eAACE,EAAA,EAAD,CAAKC,UAAU,YAAf,UACI,eAACuD,EAAA,EAAKC,MAAN,CAAYC,UAAW,kBAAkBN,EAAOO,MAAhD,UACI,cAACH,EAAA,EAAKI,MAAN,wBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,SAAUlC,EAAcmC,KAAK,QAAQC,UAAWlD,EAAMmD,SAAUC,KAAK,OAAOC,YAAY,YAAYC,MAAOhB,EAAOG,WAGpI,eAACC,EAAA,EAAKC,MAAN,CAAYC,UAAW,kBAAkBN,EAAOO,MAAhD,UACI,cAACH,EAAA,EAAKI,MAAN,2BACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,SAAUlC,EAAcmC,KAAK,eAAgBC,UAAWlD,EAAMmD,SAAUC,KAAK,OAAOE,MAAOhB,EAAOoC,kBAGpH,eAAChC,EAAA,EAAKC,MAAN,CAAYC,UAAW,sBAAsBN,EAAOO,MAApD,UACI,cAACH,EAAA,EAAKI,MAAN,0BACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,SAAUlC,EAAcmC,KAAK,cAAeC,UAAWlD,EAAMmD,SAAUC,KAAK,OAAOE,MAAOhB,EAAOqC,iBAGnH,eAACjC,EAAA,EAAKC,MAAN,CAAYC,UAAW,wBAAwBN,EAAOO,MAAtD,UACI,cAACH,EAAA,EAAKI,MAAN,4BACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,SAAUlC,EAAcmC,KAAK,gBAAgBC,UAAWlD,EAAMmD,SAAUC,KAAK,OAAOE,MAAOhB,EAAOE,+B,iBCsK7HoC,MA5Qf,SAAqB5E,GAAO,MAGmC6E,mBAAS,IAH5C,mBAGrBC,EAHqB,KAGIC,EAHJ,OAIyBF,mBAAS,IAJlC,mBAIrBG,EAJqB,KAIDC,EAJC,OAKiBJ,oBAAS,GAL1B,mBAKrBK,EALqB,KAKLC,EALK,OAMWN,mBAASV,MAASiB,IAAI,EAAG,SAASf,OAAO,eANpD,mBAMrBgB,EANqB,KAMRC,EANQ,OAOWT,mBAAS,SAPpB,mBAOrBU,EAPqB,KAORC,EAPQ,OAQiBX,oBAAS,GAR1B,mBAQrBY,EARqB,KAQNC,EARM,OASeb,oBAAS,GATxB,mBASrBc,EATqB,KASNC,EATM,OAUqBf,oBAAS,GAV9B,mBAUrBgB,EAVqB,KAUJC,EAVI,OAWDjB,mBAAS,MAXR,mBAWrBkB,EAXqB,KAWdC,EAXc,OAYKnB,mBAAS,MAZd,oBAYrBoB,GAZqB,MAYXC,GAZW,SAaWrB,mBAAS,MAbpB,qBAarBsB,GAbqB,MAaRC,GAbQ,MAgB3BC,qBAAU,WACT,IAAIC,IAAoBxB,KAA6BE,EAEpDU,EADGR,EACgBoB,KAAqBjB,KAAiBE,EAGvCe,KACjB,CAACxB,EAAyBE,EAAoBE,EAAgBG,EAAaE,IAE9Ec,qBAAU,WACTT,IAAmBG,KACjB,CAACA,IAGJM,qBAAU,WACT,GAAIE,OAAOC,SAAU,CACpB,IAAMP,EAAW,IAAIQ,IAAOC,UAAUC,aAAaJ,OAAOC,UAC1DN,GAAYD,MAEX,CAACF,IAEJM,qBAAU,YACJ,uCAAG,sBAAAO,EAAA,yDACFX,GADE,6DAEPH,EAFO,SAEoBG,GAASY,eAF7B,6BAE8C,GAF9C,yDAAH,qDAILC,KACE,CAACb,KAEJ,IAiBIc,GAAkB,uCAAG,WAAOC,GAAP,qBAAAJ,EAAA,6DACxBI,EAAEC,iBACFC,QAAQC,IAAInC,EAAoBF,GAFR,SAMnBI,IACHkC,EAAkBjD,IAAOkB,EAAc,IAAME,GAAalB,UAPpC,SAUNgD,IAAMC,KAAN,UAAcnJ,EAAOC,QAArB,mBAA+C,CAC/D,KAAQ,WACR,aAAgB0G,EAChB,mBAAsBE,EACtB,YAAeoC,IAdO,OAUnBG,EAVmB,OAiBnBC,EAAID,EAAKE,KAEPC,EAAajB,IAAOkB,MAAMC,YAAYJ,EAAEK,gBAAgB,IAC9DX,QAAQC,IAAIO,GAEZF,EAAEE,WAAaA,EAEfF,EAAEM,SAAWN,EAAEO,aAAaC,aAAe,IAE3ChC,EAASwB,GA1Bc,kDA6BvBN,QAAQC,IAAI,oDAAZ,MACAc,MAAM,gHA9BiB,0DAAH,sDA2ClBC,GAAmB,uCAAG,WAAOlB,GAAP,SAAAJ,EAAA,+EAElBL,OAAOC,SAAS2B,QAAQ,CAAEC,OAAQ,wBAFhB,OAGxBtC,GAAqB,GAHG,+CAKxBoB,QAAQC,IAAI,4BAAZ,MALwB,wDAAH,sDASnBkB,GAAc,uCAAG,WAAOrB,GAAP,iBAAAJ,EAAA,sEAEf0B,EAASrC,GAASsC,YAFH,SAGAD,EAAOE,gBAAgB,CACzC1I,GAAIiG,EAAM0C,sBACVnF,MAAOmD,IAAOiC,UAAUC,KAAK5C,EAAM8B,gBAAgB,MALjC,cAGbe,EAHa,gBAQbvB,IAAMC,KAAN,UAAcnJ,EAAOC,QAArB,wBAA4C2H,EAAM8C,SAAW,CAClE,QAAW9C,EAAM8C,QACjB,qBAAwBD,EAAKE,KAC7B,mBAAsBF,EAAKD,KAC3B,QAAWxC,KAZO,OAenB8B,MAAM,mDACNlD,EAA2B,IAC3BE,EAAsB,IACtBE,GAAkB,GAClBiB,GAAe,MACfJ,EAAS,MApBU,kDAsBnBkB,QAAQC,IAAI,8BAAZ,MACAc,MAAM,2EAvBa,0DAAH,sDA2BlB,OACC,gCACC,eAACjJ,EAAA,EAAD,WACC,eAACE,EAAA,EAAD,CAAKC,UAAU,WAAf,qBACS,mBAAGwB,KAAK,qCAAqCF,OAAO,SAASC,IAAI,aAAjE,yBADT,gCAGA,cAACxB,EAAA,EAAD,CAAKC,UAAU,WAAf,4DAGA,cAACD,EAAA,EAAD,CAAKC,UAAU,WAAf,gCAKD,eAACuD,EAAA,EAAD,WACC,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,0BAAtB,UACC,cAACF,EAAA,EAAKI,MAAN,+BACA,cAACJ,EAAA,EAAKK,QAAN,CAAcG,SAAUyC,EAAerC,MAAOwB,EAAyB9B,SAAU,SAACgE,GAAD,OAjHpD,SAACnD,GACjC,IAAIkF,EAAQlF,EAAI1C,MAAM,UACtB,GAAK4H,GAA0B,IAAjBA,EAAMC,OAApB,CAKA,IAAIC,EAAUF,EAAM,GAAG5H,MAAM,KACxB8H,GAA8B,IAAnBA,EAAQD,QAKxBjE,EAA2BkE,EAAQ,IACnChE,EAAsBgE,EAAQ,KAL7BlE,EAA2BlB,QAN3BkB,EAA2BlB,GA8G+DqF,CAA2BlC,EAAEvG,OAAO6C,QAAQF,KAAK,OAAOC,YAAY,wEAC5J,cAACX,EAAA,EAAK+B,KAAN,CAAWtF,UAAU,aAArB,2DAKC2F,EAA0B,qCAC3B,eAACpC,EAAA,EAAKC,MAAN,CAAYC,UAAU,qBAAtB,UACC,cAACF,EAAA,EAAKI,MAAN,uBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcG,SAAUyC,EAAerC,MAAO0B,EAAoBhC,SAAU,SAACgE,GAAD,OAAO/B,EAAsB+B,EAAEvG,OAAO6C,QAAQF,KAAK,OAAOC,YAAY,mCAGnJ,eAACrE,EAAA,EAAD,WACC,cAACE,EAAA,EAAD,CAAKC,UAAU,kBAAf,SACC,eAACuD,EAAA,EAAKC,MAAN,CAAYC,UAAU,iBAAtB,UACC,cAACF,EAAA,EAAKyG,MAAN,CAAYjG,SAAUyC,EAAeyD,QAASlE,EAAgBlC,SAAU,SAACgE,GAAD,OAAO7B,EAAkB6B,EAAEvG,OAAO2I,UAAUhG,KAAK,WAAWiG,MAAM,qBAC1I,cAAC3G,EAAA,EAAK+B,KAAN,CAAWtF,UAAU,aAArB,0MAKA+F,EAAiB,qCACjB,cAAChG,EAAA,EAAD,CAAKC,UAAU,kBAAf,SACC,cAACuD,EAAA,EAAKC,MAAN,CAAYC,UAAU,cAAtB,SACC,cAACF,EAAA,EAAKK,QAAN,CAAcG,SAAUyC,EAAerC,MAAO+B,EAAarC,SAAU,SAACgE,GAAD,OAAO1B,EAAe0B,EAAEvG,OAAO6C,QAAQF,KAAK,aAGnH,cAAClE,EAAA,EAAD,CAAKC,UAAU,kBAAf,SACC,cAACuD,EAAA,EAAKC,MAAN,CAAYC,UAAU,cAAtB,SACC,cAACF,EAAA,EAAKK,QAAN,CAAcG,SAAUyC,EAAerC,MAAOiC,EAAavC,SAAU,SAACgE,GAAD,OAAOxB,EAAewB,EAAEvG,OAAO6C,QAAQF,KAAK,gBAInH,WAGD,KAIDuC,EAKD,cAAC2D,EAAA,EAAD,CAAQC,QAAQ,UAAU/E,QA3GZ,SAACwC,GAClBA,EAAEC,iBACFlC,EAA2B,IAC3BE,EAAsB,IACtBE,GAAkB,GAClBa,EAAS,MACTI,GAAe,OAqGZ,mBAJA,cAACkD,EAAA,EAAD,CAAQC,QAAQ,UAAU/E,QAASuC,GAAoB7D,UAAWuC,EAAlE,+BAUAM,EACD,gCACC,oBAAIvH,MAAO,CAACgC,UAAU,OAAQ7B,aAAa,UAC3C,eAACK,EAAA,EAAD,WACC,eAACE,EAAA,EAAD,CAAKC,UAAU,WAAf,UACC,kDAGA,cAAC,EAAD,CAASiD,KAAM2D,EAAMnF,aAEpBsE,EAAiB,eAAChG,EAAA,EAAD,CAAKC,UAAU,WAAf,UAClB,kDAGA,cAAC,EAAD,CAASiD,KAAM2D,EAAMnF,QAASuC,UAAU,EAAMZ,QAAS,SAACiH,GAAD,OAAOpD,GAAeoD,SACrE,QAIV,oBAAIhL,MAAO,CAACgC,UAAU,OAAQ7B,aAAa,UAC3C,cAACK,EAAA,EAAD,UACC,cAACE,EAAA,EAAD,CAAKC,UAAU,kBAAf,SACC,eAACuD,EAAA,EAAD,WACC,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,aAAtB,UACC,cAAC,IAAD,CACC6G,WAAW,EADZ,SAEG1D,EAAMgC,aAAa2B,UAAU9F,KAAI,SAAC+F,EAAI7F,GACtC,OAAO,8BAAgB6F,GAAN7F,QAGnB,cAACpB,EAAA,EAAKI,MAAN,UAAY,+CAAiC,cAAC,IAAD,CAAgB8G,WAAS,gBAAgBpL,MAAO,CAACqL,WAAW,UACzG,cAACnH,EAAA,EAAKK,QAAN,CAAc+G,UAAU,EAAM1G,KAAK,OAAOE,MAAK,UAAKyC,EAAM2B,WAAX,oBAAiC3B,EAAM+B,SAAvC,gBAEjD,eAACpF,EAAA,EAAKC,MAAN,CAAYC,UAAU,gBAAtB,UACA,cAAC0G,EAAA,EAAD,CAAQpG,SAAU2C,EAAiB0D,QAAQ,UAAU/E,QAAS0D,GAA9D,+BAGA,cAACxF,EAAA,EAAK+B,KAAN,CAAWtF,UAAU,aAArB,ubAIA,cAACuD,EAAA,EAAKC,MAAN,UACA,cAAC2G,EAAA,EAAD,CAAQpG,UAAW2C,EAAiB0D,QAAQ,UAAU/E,QAAS6D,GAA/D,2DASF,SCpFS0B,MAhLf,SAAgB/J,GAGf,IAHsB,EAaQ6E,mBAVL,CACxBpC,MAAO,GACPiC,aAAa,GACbC,YAAY,GACZnC,cAAc,GACdS,KAAM,GACNM,YAAa,GACbC,WAAW,KAVU,mBAahBwG,EAbgB,KAaPC,EAbO,OAcsBpF,oBAAS,GAd/B,mBAchBY,EAdgB,KAcDC,EAdC,OAeoBb,oBAAS,GAf7B,mBAehBc,EAfgB,KAeDC,EAfC,OAgB0Bf,oBAAS,GAhBnC,mBAgBhBgB,EAhBgB,KAgBCC,EAhBD,OAiBIjB,mBAAS,MAjBb,mBAiBhBkB,EAjBgB,KAiBTC,EAjBS,OAkBUnB,mBAAS,MAlBnB,mBAkBhBoB,EAlBgB,KAkBNC,EAlBM,KAqBtBG,qBAAU,WACL2D,EAAQ/G,KACXyC,GAAmB,GAGpBA,GAAmB,KACjB,CAACsE,IAEJ3D,qBAAU,WACTT,IAAmBG,KACjB,CAACA,IAGJM,qBAAU,WACT,GAAIE,OAAOC,SAAU,CACpB,IAAMP,EAAW,IAAIQ,IAAOC,UAAUC,aAAaJ,OAAOC,UAC1DN,EAAYD,MAEX,CAACF,IAEJM,qBAAU,YACJ,uCAAG,sBAAAO,EAAA,yDACFX,EADE,6DAEPH,EAFO,SAEoBG,EAASY,eAF7B,6BAE8C,GAF9C,yDAAH,qDAILC,KACE,CAACb,IAEJ,IAAIiE,EAAa,uCAAG,WAAOlD,GAAP,mBAAAJ,EAAA,6DACnBI,EAAEC,iBACFC,QAAQC,IAAI6C,GAFO,kBAKD3C,IAAMC,KAAN,UAAcnJ,EAAOC,QAArB,mBAA+C,CAC/D,KAAQ,SACI,QAAW4L,IAPN,OAKdzC,EALc,QAUdC,EAAID,EAAKE,MAEP7G,SACLqJ,EAAWzC,EAAE5G,SAGR8G,EAAajB,IAAOkB,MAAMC,YAAYJ,EAAEK,gBAAgB,IAC9DX,QAAQC,IAAIO,GAEZF,EAAEE,WAAaA,EAEfF,EAAEM,SAAWN,EAAEO,aAAaC,aAAe,IAE3ChC,EAASwB,GAvBS,kDA0BlBN,QAAQC,IAAI,oDAAZ,MACAc,MAAM,gHA3BY,0DAAH,sDAoCbC,EAAmB,uCAAG,WAAOlB,GAAP,SAAAJ,EAAA,+EAElBL,OAAOC,SAAS2B,QAAQ,CAAEC,OAAQ,wBAFhB,OAGxBtC,GAAqB,GAHG,+CAKxBoB,QAAQC,IAAI,4BAAZ,MALwB,wDAAH,sDASnBkB,EAAc,uCAAG,WAAOrB,GAAP,iBAAAJ,EAAA,sEAEf0B,EAASrC,EAASsC,YAFH,SAGAD,EAAOE,gBAAgB,CACzC1I,GAAIiG,EAAM0C,sBACVnF,MAAOmD,IAAOiC,UAAUC,KAAK5C,EAAM8B,gBAAgB,MALjC,cAGbe,EAHa,gBAQbvB,IAAMC,KAAN,UAAcnJ,EAAOC,QAArB,wBAA4C2H,EAAM8C,SAAW,CAClE,QAAW9C,EAAM8C,QACjB,qBAAwBD,EAAKE,KAC7B,mBAAsBF,EAAKD,KAC3B,QAAWqB,IAZO,OAenB/B,MAAM,mDACNgC,EA3GuB,CACxBxH,MAAO,GACPiC,aAAa,GACbC,YAAY,GACZnC,cAAc,GACdS,KAAM,GACNM,YAAa,GACbC,WAAW,KAqGVwC,EAAS,MAjBU,kDAmBnBkB,QAAQC,IAAI,8BAAZ,MACAc,MAAM,2EApBa,0DAAH,sDAwBlB,OACC,gCACC,eAACvF,EAAA,EAAD,WACgBqD,EAAsG,cAAC,EAAD,CAAS3D,KAAM2D,EAAMnF,QAASuC,UAAU,EAAOZ,QAAS,SAACiH,GAAD,OAAOS,EAAWT,MAAxK,cAAC,EAAD,CAASpH,KAAM4H,EAAS7G,UAAWwC,EAAepD,QAAS,SAACiH,GAAD,OAAOS,EAAWT,MAElG7D,EAKD,cAAC2D,EAAA,EAAD,CAAQC,QAAQ,UAAU/E,QAhDZ,SAACwC,GAClBA,EAAEC,iBACFjB,EAAS,OA8CN,kBAJA,cAACsD,EAAA,EAAD,CAAQC,QAAQ,UAAU/E,QAAS0F,EAAehH,UAAWuC,EAA7D,+BAUAM,EACD,gCACC,oBAAIvH,MAAO,CAACgC,UAAU,OAAQ7B,aAAa,UAC3C,cAACK,EAAA,EAAD,UACC,cAACE,EAAA,EAAD,CAAKC,UAAU,kBAAf,SACC,eAACuD,EAAA,EAAD,WACC,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,aAAtB,UACC,cAAC,IAAD,CACC6G,WAAW,EADZ,SAEG1D,EAAMgC,aAAa2B,UAAU9F,KAAI,SAAC+F,EAAI7F,GACtC,OAAO,8BAAgB6F,GAAN7F,QAGnB,cAACpB,EAAA,EAAKI,MAAN,UAAY,+CAAiC,cAAC,IAAD,CAAgB8G,WAAS,gBAAgBpL,MAAO,CAACqL,WAAW,UACzG,cAACnH,EAAA,EAAKK,QAAN,CAAc+G,UAAU,EAAM1G,KAAK,OAAOE,MAAK,UAAKyC,EAAM2B,WAAX,oBAAiC3B,EAAM+B,SAAvC,gBAEjD,eAACpF,EAAA,EAAKC,MAAN,CAAYC,UAAU,gBAAtB,UACA,cAAC0G,EAAA,EAAD,CAAQpG,SAAU2C,EAAiB0D,QAAQ,UAAU/E,QAAS0D,EAA9D,+BAGA,cAACxF,EAAA,EAAK+B,KAAN,CAAWtF,UAAU,aAArB,ubAIA,cAACuD,EAAA,EAAKC,MAAN,UACA,cAAC2G,EAAA,EAAD,CAAQpG,UAAW2C,EAAiB0D,QAAQ,UAAU/E,QAAS6D,EAA/D,2DASF,SC7KS8B,MAZf,SAAuBnK,GAEtB,OACC,cAAChB,EAAA,EAAD,UACC,cAACE,EAAA,EAAD,CAAKC,UAAU,WAAf,6BCwBYiL,G,mKApBb,WAEE,OACE,sBAAK5L,MAAO,CAACY,WAAY,wBAAyBC,OAAO,OAAzD,UACI,cAAC,EAAD,IAEA,cAACN,EAAA,EAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOsL,OAAK,EAACC,KAAK,IAAIC,UAAWxK,IACjC,cAAC,IAAD,CAAOsK,OAAK,EAACC,KAAK,eAAeC,UAAW3F,IAC5C,cAAC,IAAD,CAAOyF,OAAK,EAACC,KAAK,UAAUC,UAAWR,IACvC,cAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,OAAOC,UAAWJ,gB,GAZhCK,cCJlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACI,cAAC,EAAD,QAGNC,SAASC,eAAe,W","file":"static/js/main.08ac306d.chunk.js","sourcesContent":["const config = {\n    // apiHost: \"http://localhost:8000\",\n    apiHost: \"https://otc-nft-api.herokuapp.com\",\n    env: \"rinkeby\",\n    ethAPIProvider: \"https://eth-rinkeby.alchemyapi.io/v2/sl7kpn-EhhbJ_6B39V4uuMQNzGRjl-ei\"\n}\n\nexport default config;","import React, { Component } from 'react';\nimport { Navbar, Nav, Row, Col, Container } from 'react-bootstrap';\nimport { Link, Redirect } from 'react-router-dom';\nimport config from '../../services/config.js';\n\nfunction NavBar() {\n    return (\n        <div style={{backgroundImage: \"linear-gradient(to right, #5f3be3, #e33b3b)\", boxShadow: \"3px 3px 6px #5f3be3\", marginBottom:\"35px\", color:\"white\"}}>\n            { config.env ? <span style={{position:\"absolute\", opacity:\"30%\"}}>{config.env}</span> : null}\n            <Container>\n                <Row style={{paddingTop:\"10px\"}}>\n                    <Col className=\"col-md-12\">\n                        <h1 style={{fontFamily: \"'Rock Salt', cursive\"}}>Over the Counter</h1> \n                        <h5 style={{fontFamily: \"'Raleway', sans-serif\", bottom:\"0px\"}}>NFTs for the Masses</h5> \n                    </Col>\n                </Row>  \n                <Navbar sticky=\"top\" className=\"navbar-dark\" style={{marginBotom:\"15px\"}}>\n                    <Nav defaultActiveKey=\"home\">\n                        <Nav.Link as={Link} eventKey=\"home\" to={`/`}>Home</Nav.Link> \n                        <Nav.Link as={Link} eventKey=\"counterfeit\" to={`/counterfeit`}>Counterfeit</Nav.Link> \n                        <Nav.Link as={Link} eventKey=\"custom\" to={`/custom`}>NFT the Web</Nav.Link> \n                        <Nav.Link as={Link} eventKey=\"own\" to={`/own`}>Own this Market</Nav.Link> \n                    </Nav>\n                </Navbar>\n            </Container>\n        </div>\n    )\n}\n\nexport default NavBar;","import React, { Component, useState } from 'react';\nimport { Row, Col, Jumbotron, Figure } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport config from '../../services/config.js';\n\n\nfunction Home(props) {\n\n\treturn (\n\t\t<div>\n\t\t\t<Jumbotron className=\"\">\t\n\t\t\t\t<h1 class=\"display-5\">Get your non-fungibles over the counter</h1>\n\t\t\t\t<p class=\"lead\">Why pay millions of dollars for an NFT when you can get the same high quality product fresh and certified from the Over the Counter market?</p>\n\t\t\t\t<p class=\"lead\">Over the Counter is the easiest and cheapest place to mint an NFT for any digital asset you would like to own, so that you can take advantage of the investment opportunity of a lifetime.</p>\n\t\t\t\t<hr style={{backgroundImage: \"linear-gradient(to right, #5f3be3, #e33b3b)\", height:\"1px\"}} />\n\t\t\t\t<p>Ready to get started? Head on over to the <Link to=\"counterfeit\">minting presses</Link> to try it out. Curious to learn more about how it works? Keep reading below or check out our FAQs.</p>\n\t\t\t\t<p class=\"lead\">\n\t\t\t\t\t<Link to=\"faqs\" class=\"btn btn-primary btn-sm\">Learn more</Link>\n\t\t\t\t\t<Link to=\"own\" class=\"btn btn-default btn-sm\">Buy this marketplace</Link>\n\t\t\t\t</p>\n\t\t\t</Jumbotron>\n\n\t\t\t<hr style={{backgroundImage: \"linear-gradient(to right, #5f3be3, #e33b3b)\", height:\"25px\"}}/>\n\n\t\t\t<Jumbotron className=\"\">\n\t\t\t\t<Row>\n\t\t\t\t\t<Col className=\"col-md-6 col-12\">\n\t\t\t\t\t\t<Figure >\n\t\t\t\t\t\t\t<Figure.Image\n\t\t\t\t\t\t\t\theight={300}\n\t\t\t\t\t\t\t\tsrc=\"https://images.unsplash.com/photo-1501066927591-314112b5888e?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=3900&q=80\"\n\t\t\t\t\t\t\t\tstyle={{boxShadow: \"3px 3px 6px #5f3be3\"}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Figure.Caption>\n\t\t\t\t\t\t\t\tYour future car (Lamborghini)\n\t\t\t\t\t\t\t</Figure.Caption>\n\t\t\t\t\t\t</Figure>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col className=\"col-md-6 col-12\">\n\t\t\t\t\t\t<hr style={{backgroundImage: \"linear-gradient(to right, #5f3be3, #e33b3b)\", height:\"1px\", marginTop:\"0px\"}} />\n\t\t\t\t\t\t<h1 class=\"display-5\">Bootlegs</h1>\n\t\t\t\t\t\t<hr style={{backgroundImage: \"linear-gradient(to right, #5f3be3, #e33b3b)\", height:\"1px\"}} />\n\t\t\t\t\t\t<div className=\"lead\">\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tLet say you see another (expensive) NFT that makes you think, “Wow, this should belong to me so I can brag about it at parties or sell it or whatever.”\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tWhile you may have had to <a target=\"_blank\" rel=\"noreferrer\" href=\"https://www.theverge.com/2021/3/22/22344937/jack-dorsey-nft-sold-first-tweet-ethereum-cryptocurrency-twitter\">pay millions of dollars</a> to be the owner of that thing on some other platforms, Over the Counter believes that NFTs are meant to be for the masses and therefore offers a reasonable price to own any digital asset your heart desires. \n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\t\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Link to=\"counterfeit\" class=\"btn btn-danger btn-lg float-right\">Let's funge some non-fungibles</Link>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t\n\t\t\t</Jumbotron>\n\n\t\t\t<hr style={{backgroundImage: \"linear-gradient(to right, #5f3be3, #e33b3b)\", height:\"25px\"}}/>\n\n\t\t\t<Jumbotron className=\"\">\n\t\t\t\t<Row>\n\t\t\t\t\t<Col className=\"col-md-6 col-12\">\n\t\t\t\t\t\t<hr style={{backgroundImage: \"linear-gradient(to right, #5f3be3, #e33b3b)\", height:\"1px\", marginTop:\"0px\"}} />\n\t\t\t\t\t\t<h1 class=\"display-5\">Own the Web</h1>\n\t\t\t\t\t\t<hr style={{backgroundImage: \"linear-gradient(to right, #5f3be3, #e33b3b)\", height:\"1px\"}} />\n\t\t\t\t\t\t<div className=\"lead\">\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tAt OTC, we believe that everything on the web should be ownable as an NFT, so we've made our platform do just that! If you see a website, image, CSS file, Tweet, or any other digital resource with a URL \n\t\t\t\t\t\t\t\tthat you know in your heart belongs to you just head on over to our <Link to=\"custom\">NFT the Web</Link> minting presses.\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tOnce you own the digital asset you had your eye on then you are free to do with it whatever you wish. For example, you should probably inform the content creator that you now own that digital asset and they’re\n\t\t\t\t\t\t\t\tgoing to need to bend to your will in regards to how it’s used. You are also free to resell that asset on a platform such as OpenSea or Electronic-Bay.com.\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Col>\n\n\t\t\t\t\t<Col className=\"col-md-6 col-12\">\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<Figure>\n\t\t\t\t\t\t\t\t\t<Figure.Image\n\t\t\t\t\t\t\t\t\t\theight={300}\n\t\t\t\t\t\t\t\t\t\tsrc=\"https://images.unsplash.com/photo-1518183214770-9cffbec72538?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=3900&q=80\"\n\t\t\t\t\t\t\t\t\t\tstyle={{boxShadow: \"3px 3px 6px #5f3be3\"}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Figure.Caption>\n\t\t\t\t\t\t\t\t\t\tYour future dollars (apprx. $119 American)\n\t\t\t\t\t\t\t\t\t</Figure.Caption>\n\t\t\t\t\t\t\t\t</Figure>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tCheck out the form letters and tips we have in our FAQ section about how to take ownership of your new digital asset. Congratulations, use it wisely!\n\t\t\t\t\t\t\t\t</p>\t\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Link to=\"counterfeit\" class=\"btn btn-danger btn-lg float-right\">I'm ready to pwn the web!</Link>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t\n\t\t\t</Jumbotron>\n\n\t\t\t<hr style={{backgroundImage: \"linear-gradient(to right, #5f3be3, #e33b3b)\", height:\"25px\"}}/>\n\n\t\t\t<Jumbotron className=\"\">\n\t\t\t\t<Row>\n\t\t\t\t\t<Col className=\"col-md-12 col-12\">\n\t\t\t\t\t\t<hr style={{backgroundImage: \"linear-gradient(to right, #5f3be3, #e33b3b)\", height:\"1px\", marginTop:\"0px\"}} />\n\t\t\t\t\t\t<h1 class=\"display-5\">Authenticity</h1>\n\t\t\t\t\t\t<hr style={{backgroundImage: \"linear-gradient(to right, #5f3be3, #e33b3b)\", height:\"1px\"}} />\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<a target=\"_blank\" rel=\"noreferrer\" href=\"https://www.reddit.com/r/ethereum/comments/lzch1m/dont_use_cent_to_buy_tweets_or_any_other_closed/gq34xie?utm_source=share&utm_medium=web2x&context=3\">\n\t\t\t\t\t\t\t\t\t<Figure>\n\t\t\t\t\t\t\t\t\t\t<Figure.Image\n\t\t\t\t\t\t\t\t\t\t\theight={300}\n\t\t\t\t\t\t\t\t\t\t\tsrc=\"/whatisreal.png\"\n\t\t\t\t\t\t\t\t\t\t\tstyle={{boxShadow: \"3px 3px 6px #5f3be3\"}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<Figure.Caption>\n\t\t\t\t\t\t\t\t\t\t\tI love this comment so much that I own the NFT of it, minted right here on OTC.\n\t\t\t\t\t\t\t\t\t\t</Figure.Caption>\n\t\t\t\t\t\t\t\t\t</Figure>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<div className=\"lead\">\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tWe take NFT authenticity seriously here at OTC, which is each and every digital asset that gets purchased on Over the Counter receives a proprietary Authenticity score. \n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tIt pays to be the first to mint any given digital asset so that you get the highest Authenticity score. As an asset is purchased more by the community, each subsequent, matching token’s Authenticity goes down and its price goes up. Double ouch! \n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t\n\t\t\t</Jumbotron>\n\t\t</div>\n\t);\n}\n\n\nexport default Home;\n","import React, { Component, useEffect, useState } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport { Formik, FieldArray } from 'formik';\nimport moment from 'moment';\nimport { Trash } from 'react-bootstrap-icons';\n\nfunction NFTMeta(props) {\n    let isModel = (u) => {\n        let fileExt = u.split('.').pop();\n        if (!fileExt) {\n            return false;\n        }\n\n        return fileExt.toLowerCase() === \"glb\";\n    };\n\n    let isVideo = (u) => {\n        let fileExt = u.split('.').pop();\n        if (!fileExt) {\n            return false;\n        }\n\n        return fileExt.toLowerCase() === \"mp4\" || fileExt.toLowerCase() === \"ogg\" || fileExt.toLowerCase() === \"webm\" || fileExt.toLowerCase() === \"ogv\";\n    };\n\n    let displayElement = (handleChange, animationURL, imageURL) => {\n        if (animationURL) {\n            if (isModel(animationURL)) {\n                return <model-viewer max-width=\"250px\" auto-rotate=\"true\" autoplay=\"true\" camera-controls=\"true\" src={animationURL} ar-status=\"not-presenting\"></model-viewer>\n            } \n            if (isVideo(animationURL)) {\n                return <video height=\"200px\" max-width=\"250px\" muted={true} autoPlay={true} controlsList=\"nodownload\" loop={true} preload=\"auto\" src={animationURL}></video>\n            } \n        }\n\n        return <img height=\"200px\" max-width=\"250px\" src={imageURL} alt=\"Error loading contract pic\"></img>\n    };\n\n\treturn (\n\t\t<Formik\n            initialValues={props.meta}\n            validate={values => {\n                const errors = {};\n                return errors;\n            }}\n        >\n        {({\n         values,\n         handleChange\n       }) => (\n           <>\n             {props.changes && props.changes(values)}\n                <Row>\n                    <Col className=\"col-md-6\">\n                        {displayElement(handleChange, values.animation_url, values.image)}\n                    </Col>\n                    <Col className=\"col-md-6\">\n                        <Form.Group controlId={\"nftmeta-name\"+values.NFTID}>\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control onChange={handleChange} name=\"name\" disabled={!props.editable} type=\"text\" placeholder=\"NFT Name, go nuts\" value={values.name} />\n                        </Form.Group>\n                        <Form.Group controlId={\"nftmeta-desc\"+values.NFTID}>\n                            <Form.Label>Description</Form.Label>\n                            <Form.Control as=\"textarea\" disabled={!props.editable} onChange={handleChange} name=\"description\" style={{height:\"100%\"}} placeholder=\"NFT Description, make sure you sell its uniquness hard\" value={values.description} />\n                        </Form.Group>\n                    </Col>\n                </Row>\n                <h4>Attributes</h4>\n                <Row>\n                    { !!values.attributes && <FieldArray name=\"attributes\">\n                    {({ insert, remove, push }) => (\n                        values.attributes.map((val, idx) => { \n                            val.formattedVal = val.value;\n\n                            if (val.value === \"number\") {\n                                val.inputType = \"number\";\n                            } else {\n                                val.inputType = \"text\";\n                            }\n\n                            if (val.max_value) {\n                                val.formattedVal = `${val.value} of ${val.max_value}`;\n                            }\n                            \n                            if (val.display_type === \"date\") {\n                                val.inputType = \"date\";\n                                val.formattedVal = moment.unix(val.value).format(\"YYYY-MM-DD\");\n                            }\n\n                            let disabled = !props.editable || val.origin === \"otc\" || !!val.max_value;\n\n                            return <Col key={idx} className=\"col-4\">\n                                {\n                                    <Form.Group controlId={\"nftmeta\"+idx}>\n                                        { !!val.trait_type && <Form.Label>{`${val.trait_type}`}</Form.Label> } {!disabled ? <Trash onClick={()=> remove(idx)}></Trash> : null}\n                                        <Form.Control onChange={handleChange} name={`attributes.${idx}.value`} disabled={disabled} type={val.inputType} value={val.formattedVal} />\n                                        {val.display_type ? <Form.Text className=\"text-muted\">\n                                            {val.display_type}\n                                        </Form.Text> : null}\n                                    </Form.Group>\n                                }\n                            </Col>\n                        })\n                    )}\n                    </FieldArray> }\n                </Row>\n                <Row>\n                    <Col className=\"col-md-12\">\n                        <Form.Group controlId={\"nftmeta-img-url\"+values.NFTID}>\n                            <Form.Label>Image URL</Form.Label>\n                            <Form.Control onChange={handleChange} name=\"image\" disabled={!props.editable} type=\"text\" placeholder=\"Image URL\" value={values.image} />\n                        </Form.Group>\n\n                        <Form.Group controlId={\"nftmeta-ext-url\"+values.NFTID}>\n                            <Form.Label>External URL</Form.Label>\n                            <Form.Control onChange={handleChange} name=\"external_url\"  disabled={!props.editable} type=\"text\" value={values.external_url} />\n                        </Form.Group>\n\n                        <Form.Group controlId={\"nftmeta-youtube-url\"+values.NFTID}>\n                            <Form.Label>Youtube URL</Form.Label>\n                            <Form.Control onChange={handleChange} name=\"youtube_url\"  disabled={!props.editable} type=\"text\" value={values.youtube_url} />\n                        </Form.Group>\n\n                        <Form.Group controlId={\"nftmeta-animation-url\"+values.NFTID}>\n                            <Form.Label>Animation URL</Form.Label>\n                            <Form.Control onChange={handleChange} name=\"animation_url\" disabled={!props.editable} type=\"text\" value={values.animation_url} />\n                        </Form.Group>\n                    </Col>\n                </Row>\n                </>\n            )}\n\t\t</Formik>\n\t);\n}\n\n\nexport default NFTMeta;\n\n\n// {\n// \t\"OrderID\": \"50bc8957-216d-4974-9f62-e7646e412071\",\n// \t\"NFTID\": \"293285d3-8467-40c8-a8cf-d0e3b614c676\",\n// \t\"Hash\": \"ec4955ca-b045-4d8b-8da1-56787ea0a74b\",\n// \t\"SubtotalInWei\": 100000000000000000,\n// \t\"EstimatedGasCost\": 300000000000000,\n// \t\"TotalPriceInWei\": 100300000000000000\n//   }","import React, { Component, useEffect, useState } from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport NFTMeta from '../ui/nftmeta.js';\nimport axios from 'axios';\nimport config from '../../services/config.js';\n// import Web3 from 'web3';\nimport { ethers } from \"ethers\";\nimport moment from 'moment';\nimport { InfoCircleFill } from 'react-bootstrap-icons';\n\n// const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n// web3.eth.getAccounts().then(console.log);\n\n// const ethEnabled = () => {\n// \tif (window.ethereum) {\n// \t  window.web3 = new Web3(window.ethereum);\n// \t  window.ethereum.enable();\n// \t  return true;\n// \t}\n// \treturn false;\n// }\n\nfunction Counterfeit(props) {\n\t// https://testnets.opensea.io/assets/0x99bae45fb8abab73d8969fad837f5287ec294eea/1\n\n\tlet [ counterfeitContractAddr, setCounterfeitContractAddr ] = useState(\"\");\n\tlet [ counterfeitTokenId, setCounterfeitTokenId ] = useState(\"\");\n\tlet [ includeRugPull, setIncludeRugPull ] = useState(false);\n\tlet [ rugPullDate, setRugPullDate ] = useState(moment().add(1, \"month\").format(\"YYYY-MM-DD\"));\n\tlet [ rugPullTime, setRugPullTime ] = useState(\"12:00\");\n\tlet [ checkoutReady, setIsCheckoutReady ] = useState(false);\n\tlet [ isCheckingOut, setIsCheckingOut ] = useState(false);\n\tlet [ walletConnected, setIsWalletConnected ] = useState(false);\n\tlet [ order, setOrder ] = useState(null);\n\tlet [ provider, setProvider ] = useState(null);\n\tlet [ rugPullMeta, setRugPullMeta ] = useState(null);\n\n\n\tuseEffect(() => {\n\t\tlet hasTokenDetails = !!counterfeitContractAddr && !!counterfeitTokenId;\n\t\tif (includeRugPull) {\n\t\t\tsetIsCheckoutReady(hasTokenDetails && !!rugPullDate && !!rugPullTime);\n\t\t\treturn;\n\t\t}\n\t\tsetIsCheckoutReady(hasTokenDetails);\n\t}, [counterfeitContractAddr, counterfeitTokenId, includeRugPull, rugPullDate, rugPullTime]);\n\n\tuseEffect(() => {\n\t\tsetIsCheckingOut(!!order);\n\t}, [order]);\n\n\n\tuseEffect(() => {\n\t\tif (window.ethereum) {\n\t\t\tconst provider = new ethers.providers.Web3Provider(window.ethereum);\n\t\t\tsetProvider(provider);\n\t\t}\n\t}, [order]);\n\n\tuseEffect(() => {\n\t\tlet f = async () => {\n\t\t\tif (!provider) { return; }\n\t\t\tsetIsWalletConnected(await provider.listAccounts() > 0);\n\t\t};\n\t\tf();\n\t}, [provider]);\n\n\tlet parseAndSetCounterfeitAddr = (val) => {\n\t\tlet parts = val.split(\"assets\");\n\t\tif (!parts || parts.length !== 2) {\n\t\t\tsetCounterfeitContractAddr(val);\n\t\t\treturn\n\t\t}\n\t\t\n\t\tlet details = parts[1].split(\"/\");\n\t\tif (!details || details.length !== 3) {\n\t\t\tsetCounterfeitContractAddr(val);\n\t\t\treturn\n\t\t}\n\n\t\tsetCounterfeitContractAddr(details[1]);\n\t\tsetCounterfeitTokenId(details[2]);\n\t}\n\n\tlet previewCounterfeit = async (e) => {\n\t\te.preventDefault();\n\t\tconsole.log(counterfeitTokenId, counterfeitContractAddr);\n\n\t\ttry {\n\t\t\tlet rugPullDateTime;\n\t\t\tif (includeRugPull) {\n\t\t\t\trugPullDateTime = moment(rugPullDate + \" \" + rugPullTime).format();\n\t\t\t}\n\n\t\t\tlet resp = await axios.post(`${config.apiHost}/api/v1/preview`, {\n\t\t\t\t\"Type\": \"contract\",\n\t\t\t\t\"ContractAddr\": counterfeitContractAddr,\n\t\t\t\t\"CounterfeitTokenID\": counterfeitTokenId,\n\t\t\t\t\"RugPullTime\": rugPullDateTime,\n\t\t\t});\n\n\t\t\tlet o = resp.data;\n\n\t\t\tconst etherValue = ethers.utils.formatEther(o.TotalPriceInWei+\"\");\n\t\t\tconsole.log(etherValue);\n\n\t\t\to.etherValue = etherValue;\n\n\t\t\to.usdValue = o.PriceDetails.PriceUSCents / 100;\n\n\t\t\tsetOrder(o);\n\n\t\t} catch (e) {\n\t\t\tconsole.log(\"Error occurred when attempting to go to checkout.\", e);\n\t\t\talert(\"It looks like that NFT isn't yet supported by OTC; we're working on it, but in the meantime try another one.\")\n\t\t}\n\t};\n\n\tlet handleClear = (e) => {\n\t\te.preventDefault();\n\t\tsetCounterfeitContractAddr(\"\");\n\t\tsetCounterfeitTokenId(\"\");\n\t\tsetIncludeRugPull(false);\n\t\tsetOrder(null);\n\t\tsetRugPullMeta(null);\n\t};\n\n\tlet handleConnectWallet = async (e) => {\n\t\ttry {\n\t\t\tawait window.ethereum.request({ method: 'eth_requestAccounts' });\n\t\t\tsetIsWalletConnected(true);\n\t\t} catch (e) {\n\t\t\tconsole.log(\"Error requesting accounts\", e);\n\t\t}\n\t};\n\n\tlet handleCheckout = async (e) => {\n\t\ttry {\n\t\t\tlet signer = provider.getSigner();\n\t\t\tconst trxn = await signer.sendTransaction({\n\t\t\t\tto: order.OTCMarketContractAddr,\n\t\t\t\tvalue: ethers.BigNumber.from(order.TotalPriceInWei+\"\")\n\t\t\t});\n\n\t\t\tawait axios.post(`${config.apiHost}/api/v1/mint/${order.OrderID}`, {\n\t\t\t\t\"OrderID\": order.OrderID,\n\t\t\t\t\"PaymentTransactionID\": trxn.hash,\n\t\t\t\t\"DestinationAddress\": trxn.from,\n\t\t\t\t\"NFTMeta\": rugPullMeta\n\t\t\t});\n\n\t\t\talert(\"Success! You'll have a newly minted NFT shortly\");\n\t\t\tsetCounterfeitContractAddr(\"\");\n\t\t\tsetCounterfeitTokenId(\"\");\n\t\t\tsetIncludeRugPull(false);\n\t\t\tsetRugPullMeta(null);\n\t\t\tsetOrder(null);\n\t\t} catch (e) {\n\t\t\tconsole.log(\"Error finishing transaction\", e);\n\t\t\talert(\"Uhhh, something went wrong... contact me about getting this worked out.\")\n\t\t}\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Row>\n\t\t\t\t<Col className=\"col-md-4\">\n\t\t\t\t\tStep 1: <a href=\"https://testnets.opensea.io/assets\" target=\"_blank\" rel=\"noreferrer\">Find an NFT</a> you love or want to sell.\n\t\t\t\t</Col>\n\t\t\t\t<Col className=\"col-md-4\">\n\t\t\t\t\tStep 2: Put the URL into the Counterfeit page.\n\t\t\t\t</Col>\n\t\t\t\t<Col className=\"col-md-4\">\n\t\t\t\t\tStep 3: Profit.\n\t\t\t\t</Col>\n\t\t\t</Row>  \n\n\t\t\t<Form>\n\t\t\t\t<Form.Group controlId=\"counterfeitContractAddr\">\n\t\t\t\t\t<Form.Label>Contract Address</Form.Label>\n\t\t\t\t\t<Form.Control disabled={isCheckingOut} value={counterfeitContractAddr} onChange={(e) => parseAndSetCounterfeitAddr(e.target.value)} type=\"text\" placeholder=\"Paste a link from OpenSea or any ERC721 contract's ethereum address\" />\n\t\t\t\t\t<Form.Text className=\"text-muted\">\n\t\t\t\t\t\tIf this is wrong I don't want to be right.\n\t\t\t\t\t</Form.Text>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t{ counterfeitContractAddr ? <>\n\t\t\t\t\t<Form.Group controlId=\"counterfeitTokenId\">\n\t\t\t\t\t\t<Form.Label>Token ID</Form.Label>\n\t\t\t\t\t\t<Form.Control disabled={isCheckingOut} value={counterfeitTokenId} onChange={(e) => setCounterfeitTokenId(e.target.value)} type=\"text\" placeholder=\"Input the Token ID you want\" />\n\t\t\t\t\t</Form.Group> \n\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col className=\"col-md-4 col-12\">\n\t\t\t\t\t\t\t<Form.Group controlId=\"includeRugPull\">\n\t\t\t\t\t\t\t\t<Form.Check disabled={isCheckingOut} checked={includeRugPull} onChange={(e) => setIncludeRugPull(e.target.checked)} type=\"checkbox\" label=\"Include Rug Pull\" />\n\t\t\t\t\t\t\t\t<Form.Text className=\"text-muted\">\n\t\t\t\t\t\t\t\t\tA rugpull will change the metadata of the contract on a certain date; let's you do some pretty classic pranks on your friends. Be aware that this is associated with an increased cost.\n\t\t\t\t\t\t\t\t</Form.Text>\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t{ includeRugPull ? <>\n\t\t\t\t\t\t\t\t<Col className=\"col-md-4 col-12\">\n\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"rugPullTime\">\n\t\t\t\t\t\t\t\t\t\t<Form.Control disabled={isCheckingOut} value={rugPullDate} onChange={(e) => setRugPullDate(e.target.value)} type=\"date\" />\n\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col className=\"col-md-4 col-12\">\n\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"rugPullTime\">\n\t\t\t\t\t\t\t\t\t\t<Form.Control disabled={isCheckingOut} value={rugPullTime} onChange={(e) => setRugPullTime(e.target.value)} type=\"time\" />\n\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t: null }\n\t\t\t\t\t</Row>\n\t\t\t\t\t</>\n\t\t\t\t\t: null\n\t\t\t\t}\n\n\t\t\t\t{\n\t\t\t\t\t!isCheckingOut ? \n\t\t\t\t\t<Button variant=\"primary\" onClick={previewCounterfeit} disabled={!checkoutReady}>\n\t\t\t\t\t\tGo to Checkout\n\t\t\t\t\t</Button>\n\t\t\t\t\t: \t\t\t\t\n\t\t\t\t\t<Button variant=\"default\" onClick={handleClear}>\n\t\t\t\t\t\tClear\n\t\t\t\t\t</Button>\n\t\t\t\t}\n\t\t\t</Form>\n\n\t\t\t{ order ?\n\t\t\t\t<div>\n\t\t\t\t\t<hr style={{marginTop:\"30px\", marginBottom:\"30px\"}}></hr>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col className=\"col-md-6\">\n\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\tContract Details\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t<NFTMeta meta={order.NFTMeta}></NFTMeta>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t{ includeRugPull ? <Col className=\"col-md-6\">\n\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\tRug Pull Details\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t<NFTMeta meta={order.NFTMeta} editable={true} changes={(v) => setRugPullMeta(v)}></NFTMeta>\n\t\t\t\t\t\t</Col> : null }\n\t\t\t\t\t</Row>\n\n\n\t\t\t\t\t<hr style={{marginTop:\"30px\", marginBottom:\"30px\"}}></hr>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col className=\"col-md-6 col-12\">\n\t\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t\t<Form.Group controlId=\"totalPrice\">\n\t\t\t\t\t\t\t\t\t<ReactTooltip\n\t\t\t\t\t\t\t\t\t\tmultiline={true}>\n\t\t\t\t\t\t\t\t\t\t\t{order.PriceDetails.LineItems.map((li, idx) => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn <div key={idx}>{li}</div>\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t</ReactTooltip>\n\t\t\t\t\t\t\t\t\t\t<Form.Label><h5>Total Price</h5></Form.Label><InfoCircleFill data-tip=\"price-details\" style={{marginLeft:\"10px\"}}></InfoCircleFill>\n\t\t\t\t\t\t\t\t\t\t<Form.Control readOnly={true} type=\"text\" value={`${order.etherValue} ETH - ($${order.usdValue} + gas)`} />\n\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t<Form.Group controlId=\"connectWallet\">\n\t\t\t\t\t\t\t\t<Button disabled={walletConnected} variant=\"primary\" onClick={handleConnectWallet}>\n\t\t\t\t\t\t\t\t\t1. Connect Wallet\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Form.Text className=\"text-muted\">\n\t\t\t\t\t\t\t\t\tBy submitting this transaction, you are acknowledging that you understand that are purchasing a \"copy\" of an NFT from a different contract. This NFT does not pretend to be the original and service of contract metadata could potentially be hindered by the other party. You are also acknowledging that this platform is someone's side project, and therefore support for any technical issues is likely to be slow but earnest.\n\t\t\t\t\t\t\t\t</Form.Text>\n\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t<Button disabled={!walletConnected} variant=\"primary\" onClick={handleCheckout}>\n\t\t\t\t\t\t\t\t\t2. Finish Transaction to Mint NFT\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\n\t\t\t\t</div>\n\t\t\t\t: null\n\t\t\t}\n\n\t\t</div>\n\t);\n}\n\n\nexport default Counterfeit;\n\n\n// {\n// \t\"OrderID\": \"50bc8957-216d-4974-9f62-e7646e412071\",\n// \t\"NFTID\": \"293285d3-8467-40c8-a8cf-d0e3b614c676\",\n// \t\"Hash\": \"ec4955ca-b045-4d8b-8da1-56787ea0a74b\",\n// \t\"SubtotalInWei\": 100000000000000000,\n// \t\"EstimatedGasCost\": 300000000000000,\n// \t\"TotalPriceInWei\": 100300000000000000\n//   }","import React, { Component, useEffect, useState } from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport NFTMeta from '../ui/nftmeta.js';\nimport axios from 'axios';\nimport config from '../../services/config.js';\n// import Web3 from 'web3';\nimport { ethers } from \"ethers\";\nimport moment from 'moment';\nimport { InfoCircleFill } from 'react-bootstrap-icons';\n\n// const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n// web3.eth.getAccounts().then(console.log);\n\n// const ethEnabled = () => {\n// \tif (window.ethereum) {\n// \t  window.web3 = new Web3(window.ethereum);\n// \t  window.ethereum.enable();\n// \t  return true;\n// \t}\n// \treturn false;\n// }\n\nfunction Custom(props) {\n\t// https://testnets.opensea.io/assets/0x99bae45fb8abab73d8969fad837f5287ec294eea/1\n\n\tlet zeroNFTMeta = () => ({\n\t\timage: \"\",\n\t\texternal_url:\"\",\n\t\tyoutube_url:\"\",\n\t\tanimation_url:\"\",\n\t\tname: \"\",\n\t\tdescription: \"\",\n\t\tattributes:[]\n\t});\n\n\tlet [ nftMeta, setNFTMeta ] = useState(zeroNFTMeta());\n\tlet [ checkoutReady, setIsCheckoutReady ] = useState(false);\n\tlet [ isCheckingOut, setIsCheckingOut ] = useState(false);\n\tlet [ walletConnected, setIsWalletConnected ] = useState(false);\n\tlet [ order, setOrder ] = useState(null);\n\tlet [ provider, setProvider ] = useState(null);\n\n\n\tuseEffect(() => {\n\t\tif (nftMeta.name) {\n\t\t\tsetIsCheckoutReady(true);\n            return;\n\t\t}\n\t\tsetIsCheckoutReady(false);\n\t}, [nftMeta]);\n\n\tuseEffect(() => {\n\t\tsetIsCheckingOut(!!order);\n\t}, [order]);\n\n\n\tuseEffect(() => {\n\t\tif (window.ethereum) {\n\t\t\tconst provider = new ethers.providers.Web3Provider(window.ethereum);\n\t\t\tsetProvider(provider);\n\t\t}\n\t}, [order]);\n\n\tuseEffect(() => {\n\t\tlet f = async () => {\n\t\t\tif (!provider) { return; }\n\t\t\tsetIsWalletConnected(await provider.listAccounts() > 0);\n\t\t};\n\t\tf();\n\t}, [provider]);\n\n\tlet previewCustom = async (e) => {\n\t\te.preventDefault();\n\t\tconsole.log(nftMeta);\n\n\t\ttry {\n\t\t\tlet resp = await axios.post(`${config.apiHost}/api/v1/preview`, {\n\t\t\t\t\"Type\": \"custom\",\n                \"NFTMeta\": nftMeta,\n\t\t\t});\n\n\t\t\tlet o = resp.data;\n\n\t\t\tif (o.NFTMeta) {\n\t\t\t\tsetNFTMeta(o.NFTMeta);\n\t\t\t}\n\n\t\t\tconst etherValue = ethers.utils.formatEther(o.TotalPriceInWei+\"\");\n\t\t\tconsole.log(etherValue);\n\n\t\t\to.etherValue = etherValue;\n\n\t\t\to.usdValue = o.PriceDetails.PriceUSCents / 100;\n\n\t\t\tsetOrder(o);\n\n\t\t} catch (e) {\n\t\t\tconsole.log(\"Error occurred when attempting to go to checkout.\", e);\n\t\t\talert(\"It looks like that NFT isn't yet supported by OTC; we're working on it, but in the meantime try another one.\")\n\t\t}\n\t};\n\n\tlet handleClear = (e) => {\n\t\te.preventDefault();\n\t\tsetOrder(null);\n\t};\n\n\tlet handleConnectWallet = async (e) => {\n\t\ttry {\n\t\t\tawait window.ethereum.request({ method: 'eth_requestAccounts' });\n\t\t\tsetIsWalletConnected(true);\n\t\t} catch (e) {\n\t\t\tconsole.log(\"Error requesting accounts\", e);\n\t\t}\n\t};\n\n\tlet handleCheckout = async (e) => {\n\t\ttry {\n\t\t\tlet signer = provider.getSigner();\n\t\t\tconst trxn = await signer.sendTransaction({\n\t\t\t\tto: order.OTCMarketContractAddr,\n\t\t\t\tvalue: ethers.BigNumber.from(order.TotalPriceInWei+\"\")\n\t\t\t});\n\n\t\t\tawait axios.post(`${config.apiHost}/api/v1/mint/${order.OrderID}`, {\n\t\t\t\t\"OrderID\": order.OrderID,\n\t\t\t\t\"PaymentTransactionID\": trxn.hash,\n\t\t\t\t\"DestinationAddress\": trxn.from,\n\t\t\t\t\"NFTMeta\": nftMeta\n\t\t\t});\n\n\t\t\talert(\"Success! You'll have a newly minted NFT shortly\");\n\t\t\tsetNFTMeta(zeroNFTMeta());\n\t\t\tsetOrder(null);\n\t\t} catch (e) {\n\t\t\tconsole.log(\"Error finishing transaction\", e);\n\t\t\talert(\"Uhhh, something went wrong... contact me about getting this worked out.\")\n\t\t}\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Form>\n                { !order ? <NFTMeta meta={nftMeta} editable={!isCheckingOut} changes={(v) => setNFTMeta(v)}></NFTMeta> : <NFTMeta meta={order.NFTMeta} editable={false} changes={(v) => setNFTMeta(v)}></NFTMeta> }\n\t\t\t\t{\n\t\t\t\t\t!isCheckingOut ? \n\t\t\t\t\t<Button variant=\"primary\" onClick={previewCustom} disabled={!checkoutReady}>\n\t\t\t\t\t\tGo to Checkout\n\t\t\t\t\t</Button>\n\t\t\t\t\t: \t\t\t\t\n\t\t\t\t\t<Button variant=\"default\" onClick={handleClear}>\n\t\t\t\t\t\tEdit\n\t\t\t\t\t</Button>\n\t\t\t\t}\n\t\t\t</Form>\n\n\t\t\t{ order ?\n\t\t\t\t<div>\n\t\t\t\t\t<hr style={{marginTop:\"30px\", marginBottom:\"30px\"}}></hr>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col className=\"col-md-6 col-12\">\n\t\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t\t<Form.Group controlId=\"totalPrice\">\n\t\t\t\t\t\t\t\t\t<ReactTooltip\n\t\t\t\t\t\t\t\t\t\tmultiline={true}>\n\t\t\t\t\t\t\t\t\t\t\t{order.PriceDetails.LineItems.map((li, idx) => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn <div key={idx}>{li}</div>\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t</ReactTooltip>\n\t\t\t\t\t\t\t\t\t\t<Form.Label><h5>Total Price</h5></Form.Label><InfoCircleFill data-tip=\"price-details\" style={{marginLeft:\"10px\"}}></InfoCircleFill>\n\t\t\t\t\t\t\t\t\t\t<Form.Control readOnly={true} type=\"text\" value={`${order.etherValue} ETH - ($${order.usdValue} + gas)`} />\n\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t<Form.Group controlId=\"connectWallet\">\n\t\t\t\t\t\t\t\t<Button disabled={walletConnected} variant=\"primary\" onClick={handleConnectWallet}>\n\t\t\t\t\t\t\t\t\t1. Connect Wallet\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Form.Text className=\"text-muted\">\n\t\t\t\t\t\t\t\t\tBy submitting this transaction, you are acknowledging that you understand that are purchasing a \"copy\" of an NFT from a different contract. This NFT does not pretend to be the original and service of contract metadata could potentially be hindered by the other party. You are also acknowledging that this platform is someone's side project, and therefore support for any technical issues is likely to be slow but earnest.\n\t\t\t\t\t\t\t\t</Form.Text>\n\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t<Button disabled={!walletConnected} variant=\"primary\" onClick={handleCheckout}>\n\t\t\t\t\t\t\t\t\t2. Finish Transaction to Mint NFT\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\n\t\t\t\t</div>\n\t\t\t\t: null\n\t\t\t}\n\n\t\t</div>\n\t);\n}\n\n\nexport default Custom;\n\n\n// {\n// \t\"OrderID\": \"50bc8957-216d-4974-9f62-e7646e412071\",\n// \t\"NFTID\": \"293285d3-8467-40c8-a8cf-d0e3b614c676\",\n// \t\"Hash\": \"ec4955ca-b045-4d8b-8da1-56787ea0a74b\",\n// \t\"SubtotalInWei\": 100000000000000000,\n// \t\"EstimatedGasCost\": 300000000000000,\n// \t\"TotalPriceInWei\": 100300000000000000\n//   }","import React, { Component, useState } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport axios from 'axios';\nimport config from '../../services/config.js';\n\n\nfunction TakeOwnership(props) {\n\n\treturn (\n\t\t<Row>\n\t\t\t<Col className=\"col-md-4\">\n            \tComing soon.\n\t\t\t</Col>\n\t\t</Row>  \n\t);\n}\n\n\nexport default TakeOwnership;\n","import React, { Component } from 'react';\n// import Radium from 'radium';\nimport { Container } from 'react-bootstrap';\nimport { Route, Switch } from 'react-router-dom';\nimport NavBar from './components/nav/NavBar.js';\nimport Home from './components/pages/Home.js';\nimport Counterfeit from './components/pages/Counterfeit.js';\nimport Custom from './components/pages/Custom.js';\nimport TakeOwnership from './components/pages/TakeOwnership.js';\n\nimport './App.css';\nimport config from './services/config';\n\nclass App extends Component {\n  render() {\n\n    return (\n      <div style={{fontFamily: \"'Raleway', sans-serif\", bottom:\"0px\"}}>\n          <NavBar></NavBar>\n\n          <Container>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/counterfeit\" component={Counterfeit} />\n              <Route exact path=\"/custom\" component={Custom} />\n              <Route exact path=\"/own\" component={TakeOwnership} />\n              {/* <Route path=\"/settings/:userId\" component={Settings} /> */}\n            </Switch>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter as Router } from \"react-router-dom\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n        <App/>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}