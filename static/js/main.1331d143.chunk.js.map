{"version":3,"sources":["services/config.js","components/nav/NavBar.js","components/pages/Home.js","components/pages/Counterfeit.js","App.js","index.js"],"names":["config","apiHost","env","paymentProcessorAddr","ethAPIProvider","NavBar","Row","Col","Navbar","sticky","Nav","defaultActiveKey","Link","as","eventKey","to","Home","props","className","href","Counterfeit","useState","counterfeitContractAddr","setCounterfeitContractAddr","counterfeitTokenId","setCounterfeitTokenId","isCheckingOut","setIsCheckingOut","walletConnected","setIsWalletConnected","order","setOrder","provider","setProvider","useEffect","window","ethereum","ethers","providers","Web3Provider","a","listAccounts","f","previewCounterfeit","e","preventDefault","console","log","axios","post","resp","o","data","etherValue","utils","formatEther","TotalPriceInWei","handleConnectWallet","request","method","handleCheckout","signer","getSigner","sendTransaction","value","BigNumber","from","trxn","OrderID","hash","Form","Group","controlId","Label","Control","disabled","onChange","target","type","placeholder","Text","Button","variant","onClick","style","marginTop","marginBottom","App","Container","exact","path","component","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1331d143.chunk.js","sourcesContent":["const config = {\n    // apiHost: \"http://localhost:8000\",\n    apiHost: \"https://otc-nft-api.herokuapp.com\",\n    env: \"rinkeby\",\n    paymentProcessorAddr: \"0xEE87d4C59F9DDb1d52Ff241Eb0d4Fbbae391C935\",\n    ethAPIProvider: \"https://eth-rinkeby.alchemyapi.io/v2/sl7kpn-EhhbJ_6B39V4uuMQNzGRjl-ei\"\n}\n\nexport default config;","import React, { Component } from 'react';\nimport { Navbar, Nav, Row, Col } from 'react-bootstrap';\nimport { Link, Redirect } from 'react-router-dom';\nimport config from '../../services/config.js';\n\nfunction NavBar() {\n    return (\n        <div>\n            <Row>\n                <Col>\n                    Over the Counter: NFTs for the Masses { config.env ? `(${config.env})` : null}\n                </Col>\n            </Row>  \n            <Navbar sticky=\"top\">\n                <Nav defaultActiveKey=\"home\">\n                    <Nav.Link as={Link} eventKey=\"home\" to={`/`}>Home</Nav.Link> \n                    <Nav.Link as={Link} eventKey=\"counterfeit\" to={`/counterfeit`}>Counterfeit</Nav.Link> \n                </Nav>\n            </Navbar>\n        </div>\n    )\n}\n\nexport default NavBar;","import React, { Component, useState } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport axios from 'axios';\nimport config from '../../services/config.js';\n\n\nfunction Home(props) {\n\n\treturn (\n\t\t<Row>\n\t\t\t<Col className=\"col-md-4\">\n            \tStep 1: <a href=\"https://testnets.opensea.io/assets\">Find an NFT</a> you love or want to sell.\n\t\t\t</Col>\n\t\t\t<Col className=\"col-md-4\">\n            \tStep 2: Put the URL into the Counterfeit page.\n\t\t\t</Col>\n\t\t\t<Col className=\"col-md-4\">\n            \tStep 3: Profit.\n\t\t\t</Col>\n\t\t</Row>  \n\t);\n}\n\n\nexport default Home;\n","import React, { Component, useEffect, useState } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport config from '../../services/config.js';\n// import Web3 from 'web3';\nimport { ethers } from \"ethers\";\n\n// const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n// web3.eth.getAccounts().then(console.log);\n\n// const ethEnabled = () => {\n// \tif (window.ethereum) {\n// \t  window.web3 = new Web3(window.ethereum);\n// \t  window.ethereum.enable();\n// \t  return true;\n// \t}\n// \treturn false;\n// }\n\nfunction Counterfeit(props) {\n\t// https://testnets.opensea.io/assets/0x99bae45fb8abab73d8969fad837f5287ec294eea/1\n\n\tlet [ counterfeitContractAddr, setCounterfeitContractAddr ] = useState(\"\");\n\tlet [ counterfeitTokenId, setCounterfeitTokenId ] = useState(\"\");\n\tlet [ isCheckingOut, setIsCheckingOut ] = useState(false);\n\tlet [ walletConnected, setIsWalletConnected ] = useState(false);\n\tlet [ order, setOrder ] = useState(null);\n\tlet [ provider, setProvider ] = useState(null);\n\n\n\tuseEffect(() => {\n\t\tsetIsCheckingOut(!!order);\n\t}, [order]);\n\n\n\tuseEffect(() => {\n\t\tif (window.ethereum) {\n\t\t\tconst provider = new ethers.providers.Web3Provider(window.ethereum);\n\t\t\tsetProvider(provider);\n\t\t}\n\t}, [order]);\n\n\tuseEffect(() => {\n\t\tlet f = async () => {\n\t\t\tif (!provider) { return; }\n\t\t\tsetIsWalletConnected(await provider.listAccounts() > 0);\n\t\t};\n\t\tf();\n\t}, [provider]);\n\n\tlet previewCounterfeit = async (e) => {\n\t\te.preventDefault();\n\t\tconsole.log(counterfeitTokenId, counterfeitContractAddr);\n\n\t\ttry {\n\t\t\tlet resp = await axios.post(`${config.apiHost}/api/v1/preview`, {\n\t\t\t\t\"Type\": \"contract\",\n\t\t\t\t\"ContractAddr\": counterfeitContractAddr,\n\t\t\t\t\"CounterfeitTokenID\": counterfeitTokenId\n\t\t\t});\n\n\t\t\tlet o = resp.data;\n\n\t\t\tconst etherValue =ethers.utils.formatEther(o.TotalPriceInWei+\"\");\n\t\t\tconsole.log(etherValue);\n\n\t\t\to.etherValue = etherValue;\n\n\t\t\tsetOrder(o);\n\n\t\t} catch (e) {\n\t\t\tconsole.log(\"Error occurred when attempting to go to checkout.\", e);\n\t\t}\n\t};\n\n\tlet handleClear = (e) => {\n\t\te.preventDefault();\n\t\tsetCounterfeitContractAddr(\"\");\n\t\tsetCounterfeitTokenId(\"\")\n\t\tsetOrder(null);\n\t};\n\n\tlet handleConnectWallet = async (e) => {\n\t\ttry {\n\t\t\tawait window.ethereum.request({ method: 'eth_requestAccounts' });\n\t\t\tsetIsWalletConnected(true);\n\t\t} catch (e) {\n\t\t\tconsole.log(\"Error requesting accounts\", e);\n\t\t}\n\t};\n\n\tlet handleCheckout = async (e) => {\n\t\ttry {\n\t\t\tlet signer = provider.getSigner();\n\t\t\tconst trxn = await signer.sendTransaction({\n\t\t\t\tto: config.paymentProcessorAddr,\n\t\t\t\tvalue: ethers.BigNumber.from(order.TotalPriceInWei+\"\")\n\t\t\t});\n\n\t\t\tawait axios.post(`${config.apiHost}/api/v1/mint/${order.OrderID}`, {\n\t\t\t\t\"OrderID\": order.OrderID,\n\t\t\t\t\"PaymentTransactionID\": trxn.hash,\n\t\t\t\t\"DestinationAddress\": trxn.from\n\t\t\t});\n\t\t} catch (e) {\n\t\t\tconsole.log(\"Error finishing transaction\", e);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Form>\n\t\t\t\t<Form.Group controlId=\"counterfeitContractAddr\">\n\t\t\t\t\t<Form.Label>Contract Address</Form.Label>\n\t\t\t\t\t<Form.Control disabled={isCheckingOut} value={counterfeitContractAddr} onChange={(e) => setCounterfeitContractAddr(e.target.value)} type=\"text\" placeholder=\"Copy an ERC721 contract's ethereum address\" />\n\t\t\t\t\t<Form.Text className=\"text-muted\">\n\t\t\t\t\t\tIf this is wrong I don't want to be right.\n\t\t\t\t\t</Form.Text>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group controlId=\"counterfeitTokenId\">\n\t\t\t\t\t<Form.Label>Token ID</Form.Label>\n\t\t\t\t\t<Form.Control disabled={isCheckingOut} value={counterfeitTokenId} onChange={(e) => setCounterfeitTokenId(e.target.value)} type=\"text\" placeholder=\"Input the Token ID you want\" />\n\t\t\t\t</Form.Group>\n\n\t\t\t\t{\n\t\t\t\t\t!isCheckingOut ? \n\t\t\t\t\t<Button variant=\"primary\" onClick={previewCounterfeit}>\n\t\t\t\t\t\tGo to Checkout\n\t\t\t\t\t</Button>\n\t\t\t\t\t: \t\t\t\t\n\t\t\t\t\t<Button variant=\"default\" onClick={handleClear}>\n\t\t\t\t\t\tClear\n\t\t\t\t\t</Button>\n\t\t\t\t}\n\t\t\t</Form>\n\n\t\t\t{ order ?\n\t\t\t\t<div>\n\t\t\t\t\t<hr style={{marginTop:\"30px\", marginBottom:\"30px\"}}></hr>\n\t\t\t\t\t<Form>\n\t\t\t\t\t\t<Form.Group controlId=\"totalPrice\">\n\t\t\t\t\t\t\t<Form.Label>Total Price</Form.Label>\n\t\t\t\t\t\t\t<Form.Control disabled type=\"text\" value={order.etherValue + \" ETH\"} />\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group controlId=\"connectWallet\">\n\t\t\t\t\t\t<Button disabled={walletConnected} variant=\"primary\" onClick={handleConnectWallet}>\n\t\t\t\t\t\t\t1. Connect Wallet\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t<Button disabled={!walletConnected} variant=\"primary\" onClick={handleCheckout}>\n\t\t\t\t\t\t\t2. Finish Transaction to Mint NFT\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t</Form>\n\t\t\t\t</div>\n\t\t\t\t: null\n\t\t\t}\n\t\t</div>\n\t);\n}\n\n\nexport default Counterfeit;\n\n\n// {\n// \t\"OrderID\": \"50bc8957-216d-4974-9f62-e7646e412071\",\n// \t\"NFTID\": \"293285d3-8467-40c8-a8cf-d0e3b614c676\",\n// \t\"Hash\": \"ec4955ca-b045-4d8b-8da1-56787ea0a74b\",\n// \t\"SubtotalInWei\": 100000000000000000,\n// \t\"EstimatedGasCost\": 300000000000000,\n// \t\"TotalPriceInWei\": 100300000000000000\n//   }","import React, { Component } from 'react';\n// import Radium from 'radium';\nimport { Container } from 'react-bootstrap';\nimport { Route } from 'react-router-dom';\nimport NavBar from './components/nav/NavBar.js';\nimport Home from './components/pages/Home.js';\nimport Counterfeit from './components/pages/Counterfeit.js';\n\nimport './App.css';\nimport config from './services/config';\n\nclass App extends Component {\n  render() {\n\n    return (\n      <Container>\n        <div>\n            <NavBar></NavBar>\n\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/counterfeit\" component={Counterfeit} />\n            {/* <Route path=\"/settings/:userId\" component={Settings} /> */}\n        </div>\n\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter as Router } from \"react-router-dom\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n        <App/>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}